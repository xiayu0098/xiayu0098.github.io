<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Research Assistant - Zotero</title>
    <url>/2020/01/26/Zotero/</url>
    <content><![CDATA[<p>科研的旅途中，需要阅读大量的论文，海量的论文无疑使得管理文献的工作变得非常复杂，尤其是因为命名方法的不恰当，导致后期再次阅读时查找困难。我看到部分学者喜欢使用<strong>author</strong>, <strong>year</strong>,<strong>title</strong>的组合方式命名文献如下图，然后存储至一固定文件夹中，以此管理文献。</p>
<p><img src="/2020/01/26/Zotero/01/26/Zotero/Annotation.png" alt="Annotation"></p>
<p>在写自己的论文的过程，不可避免地需要引用相关的论文。这里介绍一种高效快速的引用论文的方法，以便于今后的科研工作。话不多说，请看下文。</p>
<p>这里主要用到了Zotero这一软件导出</p>
]]></content>
      <categories>
        <category>research</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>hexo-asset-image</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab Tips</title>
    <url>/2020/01/26/Matlab-Tips/</url>
    <content><![CDATA[<h2 id="General-Programming-Tips"><a href="#General-Programming-Tips" class="headerlink" title="General Programming Tips"></a>General Programming Tips</h2><ol>
<li>Compute the running time of a function all</li>
</ol>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">tic; fft(<span class="built_in">rand</span>(<span class="number">500</span>)); <span class="built_in">disp</span>( [’it takes ’ num2str(toc) ’s.’] );</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>Create a function that take optional arguments in a struct</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">f</span><span class="params">(x,options)</span></span></span><br><span class="line"><span class="comment">% parse the struct</span></span><br><span class="line"><span class="keyword">if</span> nargin&lt;<span class="number">2</span></span><br><span class="line">options.null = <span class="number">0</span>; <span class="comment">% force creation of options</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> isfield(options, ’a’)</span><br><span class="line">options.a = <span class="number">1</span>; <span class="comment">% default value</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">a = options.a;</span><br><span class="line"><span class="keyword">if</span> isfield(options, ’b’)</span><br><span class="line">options.b = <span class="number">1</span>; <span class="comment">% default value</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">b = options.b;</span><br><span class="line"><span class="comment">% Here the body of the function ...</span></span><br></pre></td></tr></table></figure>
<p>note: nargin returns the number of function input arguments given in the call to the currently executing function. </p>
</li>
<li><p>Try to use <strong>varargin</strong>  in function e.g. as following. A single function to generate two-dimensional (2D) line graphs, avoiding a long list of code for the generation of each graphic.</p>
<p><strong>PlotSet</strong> generates 2D plots, including multiple plots on a page. This code processes <strong>varargin</strong> as<br>parameter pairs to set options. This makes it easy to expand the options. You can look for more information in the following book.</p>
<p>Paluszek, M., and S. Thomas. <em>MATLAB Machine Learning</em>. Apress, 2016. <a href="https://books.google.com.au/books?id=jy75vQAACAAJ" target="_blank" rel="noopener">https://books.google.com.au/books?id=jy75vQAACAAJ</a>.</p>
</li>
</ol>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%% PLOTSET Create two-dimensional plots from a data set.</span></span><br><span class="line"><span class="comment">%% Form</span></span><br><span class="line"><span class="comment">% h = PlotSet( x, y, varargin )</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%% Decription</span></span><br><span class="line"><span class="comment">% Plot y vs x in one figure.</span></span><br><span class="line"><span class="comment">% If x has the same number of rows as y then each row of y is plotted</span></span><br><span class="line"><span class="comment">% against the corresponding row of x. If x has one row then all of the</span></span><br><span class="line"><span class="comment">% y vectors are plotted against those x variables.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% Accepts optional arguments that modify the plot parameters.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% Type PlotSet for a demo.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%% Inputs</span></span><br><span class="line"><span class="comment">% x (:,:) Independent variables</span></span><br><span class="line"><span class="comment">% y (:,:) Dependent variables</span></span><br><span class="line"><span class="comment">% varargin &#123;&#125; Optional arguments with values</span></span><br><span class="line"><span class="comment">% 'x label', 'y label', 'plot title', 'plot type'</span></span><br><span class="line"><span class="comment">% 'figure title', 'plot set', 'legend'</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%% Outputs</span></span><br><span class="line"><span class="comment">% h (1,1) Figure handle</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">h</span> = <span class="title">PlotSet</span><span class="params">( x, y, varargin )</span></span></span><br><span class="line"><span class="comment">% Demo</span></span><br><span class="line"><span class="keyword">if</span>( nargin &lt; <span class="number">1</span> )</span><br><span class="line">Demo;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">% Defaults</span></span><br><span class="line">nCol = <span class="number">1</span>;</span><br><span class="line">n =<span class="built_in">size</span>(x,<span class="number">1</span>);</span><br><span class="line">m =<span class="built_in">size</span>(y,<span class="number">1</span>);</span><br><span class="line">yLabel = cell(<span class="number">1</span>,m);</span><br><span class="line">xLabel = cell(<span class="number">1</span>,n);</span><br><span class="line">plotTitle = cell(<span class="number">1</span>,n);</span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:m</span><br><span class="line">yLabel&#123;k&#125; = <span class="string">'y'</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:n</span><br><span class="line">xLabel&#123;k&#125; = <span class="string">'x'</span>;</span><br><span class="line">plotTitle&#123;k&#125; = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">figTitle = <span class="string">'PlotSet'</span>;</span><br><span class="line">plotType = <span class="string">'plot'</span>;</span><br><span class="line">plotSet = cell(<span class="number">1</span>,m);</span><br><span class="line">leg = cell(<span class="number">1</span>,m);</span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:m</span><br><span class="line">plotSet&#123;k&#125; = k;</span><br><span class="line">leg&#123;k&#125; = &#123;&#125;;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">% Handle input parameters</span></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:<span class="number">2</span>:<span class="built_in">length</span>(varargin)</span><br><span class="line"><span class="keyword">switch</span> lower(varargin&#123;k&#125; )</span><br><span class="line"><span class="keyword">case</span> <span class="string">'x label'</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:n</span><br><span class="line">xLabel&#123;<span class="built_in">j</span>&#125; = varargin&#123;k+<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">'y label'</span></span><br><span class="line">temp = varargin&#123;k+<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">if</span>( ischar(temp) )</span><br><span class="line">yLabel&#123;<span class="number">1</span>&#125; = temp;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">yLabel = temp;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">'plot title'</span></span><br><span class="line"><span class="keyword">if</span>( iscell(varargin&#123;k+<span class="number">1</span>&#125;) )</span><br><span class="line">plotTitle = varargin&#123;k+<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">plotTitle&#123;<span class="number">1</span>&#125; = varargin&#123;k+<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">'figure title'</span></span><br><span class="line">figTitle = varargin&#123;k+<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'plot type'</span></span><br><span class="line">plotType = varargin&#123;k+<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'plot set'</span></span><br><span class="line">plotSet = varargin&#123;k+<span class="number">1</span>&#125;;</span><br><span class="line">m =<span class="built_in">length</span>(plotSet);</span><br><span class="line"><span class="keyword">case</span> <span class="string">'legend'</span></span><br><span class="line">leg = varargin&#123;k+<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">otherwise</span></span><br><span class="line">fprintf(<span class="number">1</span>,<span class="string">'%s is not an allowable parameter\n'</span>,varargin&#123;k&#125;);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">h = <span class="built_in">figure</span>(<span class="string">'name'</span>,figTitle);</span><br><span class="line"><span class="comment">% First path is for just one row in x</span></span><br><span class="line"><span class="keyword">if</span>( n == <span class="number">1</span> )</span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:m</span><br><span class="line">subplot(m,nCol,k);</span><br><span class="line"><span class="built_in">j</span> = plotSet&#123;k&#125;;</span><br><span class="line">plotXY(x,y(<span class="built_in">j</span>,:),plotType);</span><br><span class="line">xlabel(xLabel&#123;<span class="number">1</span>&#125;);</span><br><span class="line">ylabel(yLabel&#123;k&#125;);</span><br><span class="line"><span class="keyword">if</span>( <span class="built_in">length</span>(plotTitle) == <span class="number">1</span> )</span><br><span class="line">title(plotTitle&#123;<span class="number">1</span>&#125;)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">title(plotTitle&#123;k&#125;)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span>( ˜<span class="built_in">isempty</span>(leg&#123;k&#125;) )</span><br><span class="line"><span class="built_in">legend</span>(leg&#123;k&#125;);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">grid on</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:n</span><br><span class="line">subplot(n,nCol,k);</span><br><span class="line"><span class="built_in">j</span> = plotSet&#123;k&#125;;</span><br><span class="line">plotXY(x(<span class="built_in">j</span>,:),y(<span class="built_in">j</span>,:),plotType);</span><br><span class="line">xlabel(xLabel&#123;k&#125;);</span><br><span class="line">ylabel(yLabel&#123;k&#125;);</span><br><span class="line"><span class="keyword">if</span>( <span class="built_in">length</span>(plotTitle) == <span class="number">1</span> )</span><br><span class="line">title(plotTitle&#123;<span class="number">1</span>&#125;)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">title(plotTitle&#123;k&#125;)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span>( ˜<span class="built_in">isempty</span>(leg&#123;k&#125;) )</span><br><span class="line"><span class="built_in">legend</span>(leg&#123;k&#125;,<span class="string">'location'</span>,<span class="string">'best'</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">grid on</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%%% PlotSet&gt;plotXY Implement different plot types</span></span><br><span class="line"><span class="comment">% log and semilog types are supported.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% plotXY(x,y,type)</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">plotXY</span><span class="params">(x,y,type)</span></span></span><br><span class="line">h = [];</span><br><span class="line"><span class="keyword">switch</span> <span class="built_in">type</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">'plot'</span></span><br><span class="line">h = <span class="built_in">plot</span>(x,y);</span><br><span class="line"><span class="keyword">case</span> &#123;<span class="string">'log'</span> <span class="string">'loglog'</span> <span class="string">'log log'</span>&#125;</span><br><span class="line">h = loglog(x,y);</span><br><span class="line"><span class="keyword">case</span> &#123;<span class="string">'xlog'</span> <span class="string">'semilogx'</span> <span class="string">'x log'</span>&#125;</span><br><span class="line">h = semilogx(x,y);</span><br><span class="line"><span class="keyword">case</span> &#123;<span class="string">'ylog'</span> <span class="string">'semilogy'</span> <span class="string">'y log'</span>&#125;</span><br><span class="line">h = semilogy(x,y);</span><br><span class="line"><span class="keyword">otherwise</span></span><br><span class="line">error(<span class="string">'%s is not an available plot type'</span>,<span class="built_in">type</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span>( ˜<span class="built_in">isempty</span>(h) )</span><br><span class="line">color = <span class="string">'rgbc'</span>;</span><br><span class="line">lS = &#123;<span class="string">'-'</span> <span class="string">'--'</span> <span class="string">':'</span> <span class="string">'-.'</span>&#125;;</span><br><span class="line"><span class="built_in">j</span> =<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:<span class="built_in">length</span>(h)</span><br><span class="line">set(h(k),<span class="string">'col'</span>,color(<span class="built_in">j</span>),<span class="string">'linestyle'</span>,lS&#123;<span class="built_in">j</span>&#125;);</span><br><span class="line"><span class="built_in">j</span> = <span class="built_in">j</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>( <span class="built_in">j</span> == <span class="number">5</span> )</span><br><span class="line"><span class="built_in">j</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%%% PlotSet&gt;Demo</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Demo</span></span></span><br><span class="line">x = <span class="built_in">linspace</span>(<span class="number">1</span>,<span class="number">1000</span>);</span><br><span class="line">y = [<span class="built_in">sin</span>(<span class="number">0.01</span>*x);<span class="built_in">cos</span>(<span class="number">0.01</span>*x);<span class="built_in">cos</span>(<span class="number">0.03</span>*x)];</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">'PlotSet: One x and two y rows'</span>)</span><br><span class="line">PlotSet( x, y, <span class="string">'figure title'</span>, <span class="string">'PlotSet Demo'</span>,...</span><br><span class="line"><span class="string">'plot set'</span>,&#123;[<span class="number">2</span> <span class="number">3</span>], <span class="number">1</span>&#125;,<span class="string">'legend'</span>,&#123;&#123;<span class="string">'A'</span> <span class="string">'B'</span>&#125;,&#123;&#125;&#125;,<span class="string">'plot title'</span>,&#123;<span class="string">'cos'</span>,<span class="string">'sin'</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>Write a function fun(a,b,c) that can take an arbitrary number of arguments</li>
</ol>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span><span class="params">(args)</span></span></span><br><span class="line">default_values = &#123;<span class="number">0.1246</span>,<span class="number">1.2346</span>,<span class="number">8.7643</span>&#125;;</span><br><span class="line">args_present = <span class="built_in">cellfun</span>(@<span class="built_in">isempty</span>,args);</span><br><span class="line">default_values(args_present) = args(args_present);</span><br><span class="line">[a b c] = deal(default_values);</span><br></pre></td></tr></table></figure>
<h2 id="Input-Output-tips"><a href="#Input-Output-tips" class="headerlink" title="Input/Output tips"></a>Input/Output tips</h2><ol>
<li>Create a graphical waitbar</li>
</ol>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">n = <span class="number">100</span>;</span><br><span class="line">h = waitbar(<span class="number">0</span>,’Waiting ...’);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">waitbar(<span class="built_in">i</span>/n);</span><br><span class="line"><span class="comment">% here perform some stuff</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">close(h);</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>Writing/Reading to a text file a list of 3-uplets.</li>
</ol>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% A is a matrix with 3 rows.</span></span><br><span class="line">fid = fopen(filename,’wt’);</span><br><span class="line">fprintf(fid, ’<span class="comment">%f %f %f\n’, A);</span></span><br><span class="line">fclose(fid); <span class="comment">% Retrieving the values back from file to matrix B.</span></span><br><span class="line">fid = fopen(filename,’r’);</span><br><span class="line">[B,cnt] = fscanf(fid,’<span class="comment">%f %f %f’);</span></span><br></pre></td></tr></table></figure>
<h2 id="Mathematical-Tips"><a href="#Mathematical-Tips" class="headerlink" title="Mathematical Tips"></a>Mathematical Tips</h2><ol>
<li>Generate n points x sampled uniformly at random on a sphere.</li>
</ol>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% tensor product gaussian is isotropic</span></span><br><span class="line">x = <span class="built_in">randn</span>(<span class="number">3</span>,n);</span><br><span class="line">d = <span class="built_in">sqrt</span>( x(<span class="number">1</span>,:).ˆ<span class="number">2</span>+x(<span class="number">2</span>,:).ˆ<span class="number">2</span>+x(<span class="number">2</span>,:).ˆ<span class="number">2</span> );</span><br><span class="line">x(<span class="number">1</span>,:) = x(<span class="number">1</span>,:)./d;</span><br><span class="line">x(<span class="number">2</span>,:) = x(<span class="number">2</span>,:)./d;</span><br><span class="line">x(<span class="number">3</span>,:) = x(<span class="number">3</span>,:)./d;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>Keep only the n biggest coefficients of a signal x (set the others to 0).</li>
</ol>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">[tmp,I] = <span class="built_in">sort</span>(<span class="built_in">abs</span>(x(:))); x( I(<span class="number">1</span>:<span class="keyword">end</span>-n) ) = <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>Draw a 3D sphere.</li>
</ol>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">p = <span class="number">20</span>; <span class="comment">% precision</span></span><br><span class="line">t = <span class="number">0</span>:<span class="number">1</span>/(p<span class="number">-1</span>):<span class="number">1</span>;</span><br><span class="line">[th,ph] = <span class="built_in">meshgrid</span>( t*<span class="built_in">pi</span>,t*<span class="number">2</span>*<span class="built_in">pi</span> );</span><br><span class="line">x = <span class="built_in">cos</span>(th);</span><br><span class="line">y = <span class="built_in">sin</span>(th).*<span class="built_in">cos</span>(ph);</span><br><span class="line">z = <span class="built_in">sin</span>(th).*<span class="built_in">sin</span>(ph);</span><br><span class="line">surf(x,y,z, z.*<span class="number">0</span>);</span><br><span class="line"><span class="comment">% some pretty rendering options</span></span><br><span class="line">shading interp; lighting gouraud;</span><br><span class="line">camlight infinite; axis square; axis off;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>Matlab graphics</tag>
      </tags>
  </entry>
  <entry>
    <title>Git notes</title>
    <url>/2020/01/20/Git-notes/</url>
    <content><![CDATA[<ul>
<li><input disabled="" type="checkbox"> <p>Fatal: refusing to merge unrelated histories</p>
<p>using “git merge” that allows merging two branches(e.g. remote branches and local branches) that have no common base by default.</p>
<p><strong>git merge –allow-unrelated-histories</strong> to force the merge to happen</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/01/20/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Inkscape Tricks</title>
    <url>/2020/01/20/Inkscape-Tricks/</url>
    <content><![CDATA[<p>Some tricks are listed in the following to help get speed up with this software.</p>
<h2 id="Clipping"><a href="#Clipping" class="headerlink" title="Clipping"></a>Clipping</h2><p>由于inkscape没有直接的剪切功能，这里提供一种简单的方式仅供参考。</p>
<ol>
<li>选择你想剪切的图片(object 1)，并使用group功能，在菜单中选择 <em>Object &gt; Group</em> 。</li>
<li>在刚选择的group上，画一个想要剪切的图形(如矩形，圆等)，object 2。</li>
<li>选择object 1 and object 2，点击 <em>Object &gt; Clip &gt; set</em></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>仅用于测试</title>
    <url>/2020/01/19/%E4%BB%85%E7%94%A8%E4%BA%8E%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>大家好，这是我的第一篇blog.</p>
]]></content>
  </entry>
</search>
