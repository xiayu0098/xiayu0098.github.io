{"meta":{"title":"Florian's Blog","subtitle":"流动的水没有形状,漂流的风找不到踪迹","description":"personal blogs","author":"Yu Xia","url":"http://yoursite.com","root":"/"},"pages":[{"title":"friends","date":"2020-01-26T08:30:05.000Z","updated":"2020-01-26T08:31:16.908Z","comments":true,"path":"friends/index.html","permalink":"http://yoursite.com/friends/index.html","excerpt":"","text":""},{"title":"about","date":"2020-01-26T08:29:43.000Z","updated":"2020-01-26T08:30:48.801Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-01-26T09:52:58.106Z","updated":"2020-01-26T09:52:58.106Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-01-26T09:53:19.885Z","updated":"2020-01-26T09:53:19.885Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"albums","date":"2020-01-27T01:17:35.112Z","updated":"2020-01-27T01:17:35.112Z","comments":true,"path":"albums/index.html","permalink":"http://yoursite.com/albums/index.html","excerpt":"","text":""}],"posts":[{"title":"Research Assistant - Zotero","slug":"Zotero","date":"2020-01-26T00:13:19.000Z","updated":"2020-01-27T01:55:04.172Z","comments":true,"path":"2020/01/26/Zotero/","link":"","permalink":"http://yoursite.com/2020/01/26/Zotero/","excerpt":"","text":"科研的旅途中，需要阅读大量的论文，海量的论文无疑使得管理文献的工作变得非常复杂，尤其是因为命名方法的不恰当，导致后期再次阅读时查找困难。我看到部分学者喜欢使用author, year,title的组合方式命名文献如下图，然后存储至一固定文件夹中，以此管理文献。 在写自己的论文的过程，不可避免地需要引用相关的论文。这里介绍一种高效快速的引用论文的方法，以便于今后的科研工作。话不多说，请看下文。 这里主要用到了Zotero这一软件导出","categories":[{"name":"research","slug":"research","permalink":"http://yoursite.com/categories/research/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"hexo-asset-image","slug":"hexo-asset-image","permalink":"http://yoursite.com/tags/hexo-asset-image/"}]},{"title":"Matlab Tips","slug":"Matlab-Tips","date":"2020-01-25T21:47:41.000Z","updated":"2020-01-26T07:15:00.859Z","comments":true,"path":"2020/01/26/Matlab-Tips/","link":"","permalink":"http://yoursite.com/2020/01/26/Matlab-Tips/","excerpt":"","text":"General Programming Tips Compute the running time of a function all 1tic; fft(rand(500)); disp( [’it takes ’ num2str(toc) ’s.’] ); Create a function that take optional arguments in a struct 1234567891011121314function y = f(x,options)% parse the structif nargin&lt;2options.null = 0; % force creation of optionsendif isfield(options, ’a’)options.a = 1; % default valueenda = options.a;if isfield(options, ’b’)options.b = 1; % default valueendb = options.b;% Here the body of the function ... note: nargin returns the number of function input arguments given in the call to the currently executing function. Try to use varargin in function e.g. as following. A single function to generate two-dimensional (2D) line graphs, avoiding a long list of code for the generation of each graphic. PlotSet generates 2D plots, including multiple plots on a page. This code processes varargin asparameter pairs to set options. This makes it easy to expand the options. You can look for more information in the following book. Paluszek, M., and S. Thomas. MATLAB Machine Learning. Apress, 2016. https://books.google.com.au/books?id=jy75vQAACAAJ. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159%% PLOTSET Create two-dimensional plots from a data set.%% Form% h = PlotSet( x, y, varargin )%%% Decription% Plot y vs x in one figure.% If x has the same number of rows as y then each row of y is plotted% against the corresponding row of x. If x has one row then all of the% y vectors are plotted against those x variables.%% Accepts optional arguments that modify the plot parameters.%% Type PlotSet for a demo.%%% Inputs% x (:,:) Independent variables% y (:,:) Dependent variables% varargin &#123;&#125; Optional arguments with values% 'x label', 'y label', 'plot title', 'plot type'% 'figure title', 'plot set', 'legend'%%% Outputs% h (1,1) Figure handlefunction h = PlotSet( x, y, varargin )% Demoif( nargin &lt; 1 )Demo;return;end% DefaultsnCol = 1;n =size(x,1);m =size(y,1);yLabel = cell(1,m);xLabel = cell(1,n);plotTitle = cell(1,n);for k = 1:myLabel&#123;k&#125; = 'y';endfor k = 1:nxLabel&#123;k&#125; = 'x';plotTitle&#123;k&#125; = '';endfigTitle = 'PlotSet';plotType = 'plot';plotSet = cell(1,m);leg = cell(1,m);for k = 1:mplotSet&#123;k&#125; = k;leg&#123;k&#125; = &#123;&#125;;end% Handle input parametersfor k = 1:2:length(varargin)switch lower(varargin&#123;k&#125; )case 'x label'for j = 1:nxLabel&#123;j&#125; = varargin&#123;k+1&#125;;endcase 'y label'temp = varargin&#123;k+1&#125;;if( ischar(temp) )yLabel&#123;1&#125; = temp;elseyLabel = temp;endcase 'plot title'if( iscell(varargin&#123;k+1&#125;) )plotTitle = varargin&#123;k+1&#125;;elseplotTitle&#123;1&#125; = varargin&#123;k+1&#125;;endcase 'figure title'figTitle = varargin&#123;k+1&#125;;case 'plot type'plotType = varargin&#123;k+1&#125;;case 'plot set'plotSet = varargin&#123;k+1&#125;;m =length(plotSet);case 'legend'leg = varargin&#123;k+1&#125;;otherwisefprintf(1,'%s is not an allowable parameter\\n',varargin&#123;k&#125;);endendh = figure('name',figTitle);% First path is for just one row in xif( n == 1 )for k = 1:msubplot(m,nCol,k);j = plotSet&#123;k&#125;;plotXY(x,y(j,:),plotType);xlabel(xLabel&#123;1&#125;);ylabel(yLabel&#123;k&#125;);if( length(plotTitle) == 1 )title(plotTitle&#123;1&#125;)elsetitle(plotTitle&#123;k&#125;)endif( ˜isempty(leg&#123;k&#125;) )legend(leg&#123;k&#125;);endgrid onendelsefor k = 1:nsubplot(n,nCol,k);j = plotSet&#123;k&#125;;plotXY(x(j,:),y(j,:),plotType);xlabel(xLabel&#123;k&#125;);ylabel(yLabel&#123;k&#125;);if( length(plotTitle) == 1 )title(plotTitle&#123;1&#125;)elsetitle(plotTitle&#123;k&#125;)endif( ˜isempty(leg&#123;k&#125;) )legend(leg&#123;k&#125;,'location','best');endgrid onendend%%% PlotSet&gt;plotXY Implement different plot types% log and semilog types are supported.%% plotXY(x,y,type)function plotXY(x,y,type)h = [];switch typecase 'plot'h = plot(x,y);case &#123;'log' 'loglog' 'log log'&#125;h = loglog(x,y);case &#123;'xlog' 'semilogx' 'x log'&#125;h = semilogx(x,y);case &#123;'ylog' 'semilogy' 'y log'&#125;h = semilogy(x,y);otherwiseerror('%s is not an available plot type',type);endif( ˜isempty(h) )color = 'rgbc';lS = &#123;'-' '--' ':' '-.'&#125;;j =1;for k = 1:length(h)set(h(k),'col',color(j),'linestyle',lS&#123;j&#125;);j = j + 1;if( j == 5 )j = 1;endendend%%% PlotSet&gt;Demofunction Demox = linspace(1,1000);y = [sin(0.01*x);cos(0.01*x);cos(0.03*x)];disp('PlotSet: One x and two y rows')PlotSet( x, y, 'figure title', 'PlotSet Demo',...'plot set',&#123;[2 3], 1&#125;,'legend',&#123;&#123;'A' 'B'&#125;,&#123;&#125;&#125;,'plot title',&#123;'cos','sin'&#125;); Write a function fun(a,b,c) that can take an arbitrary number of arguments 12345function fun(args)default_values = &#123;0.1246,1.2346,8.7643&#125;;args_present = cellfun(@isempty,args);default_values(args_present) = args(args_present);[a b c] = deal(default_values); Input/Output tips Create a graphical waitbar 1234567n = 100;h = waitbar(0,’Waiting ...’);for i=1:nwaitbar(i/n);% here perform some stuffendclose(h); Writing/Reading to a text file a list of 3-uplets. 123456% A is a matrix with 3 rows.fid = fopen(filename,’wt’);fprintf(fid, ’%f %f %f\\n’, A);fclose(fid); % Retrieving the values back from file to matrix B.fid = fopen(filename,’r’);[B,cnt] = fscanf(fid,’%f %f %f’); Mathematical Tips Generate n points x sampled uniformly at random on a sphere. 123456% tensor product gaussian is isotropicx = randn(3,n);d = sqrt( x(1,:).ˆ2+x(2,:).ˆ2+x(2,:).ˆ2 );x(1,:) = x(1,:)./d;x(2,:) = x(2,:)./d;x(3,:) = x(3,:)./d; Keep only the n biggest coefficients of a signal x (set the others to 0). 1[tmp,I] = sort(abs(x(:))); x( I(1:end-n) ) = 0; Draw a 3D sphere. 12345678910p = 20; % precisiont = 0:1/(p-1):1;[th,ph] = meshgrid( t*pi,t*2*pi );x = cos(th);y = sin(th).*cos(ph);z = sin(th).*sin(ph);surf(x,y,z, z.*0);% some pretty rendering optionsshading interp; lighting gouraud;camlight infinite; axis square; axis off;","categories":[],"tags":[{"name":"Matlab graphics","slug":"Matlab-graphics","permalink":"http://yoursite.com/tags/Matlab-graphics/"}]},{"title":"Git notes","slug":"Git-notes","date":"2020-01-19T23:39:30.000Z","updated":"2020-01-19T23:45:22.749Z","comments":true,"path":"2020/01/20/Git-notes/","link":"","permalink":"http://yoursite.com/2020/01/20/Git-notes/","excerpt":"","text":"Fatal: refusing to merge unrelated histories using “git merge” that allows merging two branches(e.g. remote branches and local branches) that have no common base by default. git merge –allow-unrelated-histories to force the merge to happen","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-01-19T23:26:56.655Z","updated":"2020-01-19T23:26:56.655Z","comments":true,"path":"2020/01/20/hello-world/","link":"","permalink":"http://yoursite.com/2020/01/20/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Inkscape Tricks","slug":"Inkscape-Tricks","date":"2020-01-19T22:39:36.000Z","updated":"2020-01-19T23:26:56.654Z","comments":true,"path":"2020/01/20/Inkscape-Tricks/","link":"","permalink":"http://yoursite.com/2020/01/20/Inkscape-Tricks/","excerpt":"","text":"Some tricks are listed in the following to help get speed up with this software. Clipping由于inkscape没有直接的剪切功能，这里提供一种简单的方式仅供参考。 选择你想剪切的图片(object 1)，并使用group功能，在菜单中选择 Object &gt; Group 。 在刚选择的group上，画一个想要剪切的图形(如矩形，圆等)，object 2。 选择object 1 and object 2，点击 Object &gt; Clip &gt; set","categories":[],"tags":[]},{"title":"仅用于测试","slug":"仅用于测试","date":"2020-01-19T02:00:11.000Z","updated":"2020-01-19T23:26:56.655Z","comments":true,"path":"2020/01/19/仅用于测试/","link":"","permalink":"http://yoursite.com/2020/01/19/%E4%BB%85%E7%94%A8%E4%BA%8E%E6%B5%8B%E8%AF%95/","excerpt":"","text":"大家好，这是我的第一篇blog.","categories":[],"tags":[]}]}