{"meta":{"title":"X. Blog","subtitle":"流动的水没有形状  漂流的风找不到踪迹","description":"personal blogs","author":"Yu Xia","url":"http://yoursite.com","root":"/"},"pages":[{"title":"albums","date":"2024-04-30T09:53:43.115Z","updated":"2024-04-11T22:47:45.944Z","comments":true,"path":"albums/index.html","permalink":"http://yoursite.com/albums/index.html","excerpt":"","text":""},{"title":"about","date":"2020-01-26T08:29:43.000Z","updated":"2020-01-26T08:30:48.000Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"friends","date":"2020-01-26T08:30:05.000Z","updated":"2020-01-26T08:31:16.000Z","comments":true,"path":"friends/index.html","permalink":"http://yoursite.com/friends/index.html","excerpt":"","text":""},{"title":"tags","date":"2024-04-30T22:40:34.998Z","updated":"2020-01-26T09:53:19.000Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2024-08-15T00:19:40.968Z","updated":"2024-08-15T00:19:40.968Z","comments":true,"path":"old-url/index.html","permalink":"http://yoursite.com/old-url/index.html","excerpt":"","text":"If you are not redirected automatically, follow the link."},{"title":"categories","date":"2024-04-30T22:40:19.037Z","updated":"2020-01-26T09:52:58.000Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Power Box Controller Arduino Code","slug":"powerBoxControl20240430","date":"2024-09-27T10:00:00.000Z","updated":"2024-09-27T04:00:02.985Z","comments":true,"path":"2024/09/27/powerBoxControl20240430/","link":"","permalink":"http://yoursite.com/2024/09/27/powerBoxControl20240430/","excerpt":"The Arduino code is in the following.","text":"The Arduino code is in the following. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119/* Title: Dual Relay Controller Made by: YX Location: Melbourne Date: 20240430 Description: This program is designed to control two relays, one mechanical and one SSR (Solid State Relay), allowing for triggering via serial commands. Expansion: The function can be extended to measure AC power, voltage, current when using PZEM004T.*/#include &lt;PWMaa.h&gt; // Include the PWM frequency library#include &lt;PZEM004Tv30.h&gt; // Power meter library// Initialize power meter with RX and TX pinsPZEM004Tv30 pzemOT1(68, 69);// Variables to store readingsfloat power1;float voltage1;float current1;float factor1;float powerx;// Relay control pinint relayPin = 8;// Timer and frequency for PWM outputint ledTimer1 = 5; // Use pin 11 for MEGAint32_t frequency = 1; // 1Hz frequency// Serial communication bufferconst byte numChars = 32;char comdata[numChars];boolean newData = false;void setup() &#123; InitTimersSafe(); // Initialize timers // Set frequency for PWM output SetPinFrequencySafe(ledTimer1, frequency); // Setup relay pin pinMode(relayPin, OUTPUT); digitalWrite(relayPin, LOW); // Relay starts off // Start serial communication Serial.begin(115200); while (!Serial) &#123; ; // Wait for serial port to connect &#125; Serial.println(&quot;Power box ready&quot;);&#125;void loop() &#123; recvWithStartEndMarkers(); // Check for serial input if (newData) &#123; processCommand(String(comdata)); // Process the command newData = false; &#125;&#125;void processCommand(String command) &#123; if (command.startsWith(&quot;F&quot;)) &#123; pwmWrite(ledTimer1, 0); // Turn off PWM delay(2); digitalWrite(relayPin, LOW); // Turn off relay delay(10); &#125; else if (command.startsWith(&quot;PWR&quot;)) &#123; readPower(); &#125; else if (command.startsWith(&quot;S&quot;)) &#123; toggleRelay(command.charAt(1)); &#125;&#125;void readPower() &#123; Serial.println(&quot;Power reading:&quot;); powerx = pzemOT1.power(); if (!isnan(powerx)) &#123; Serial.println(powerx); &#125; else &#123; Serial.println(&quot;Error: Power data is not available.&quot;); &#125;&#125;void toggleRelay(char state) &#123; if (state == &#x27;O&#x27;) &#123; Serial.println(&quot;Relay On&quot;); digitalWrite(relayPin, HIGH); &#125; else if (state == &#x27;F&#x27;) &#123; Serial.println(&quot;Relay Off&quot;); digitalWrite(relayPin, LOW); &#125;&#125;void recvWithStartEndMarkers() &#123; static boolean recvInProgress = false; static byte ndx = 0; char startMarker = &#x27;&lt;&#x27;; char endMarker = &#x27;&gt;&#x27;; char rc; while (Serial.available() &gt; 0 &amp;&amp; !newData) &#123; rc = Serial.read(); if (recvInProgress) &#123; if (rc != endMarker) &#123; comdata[ndx++] = rc; if (ndx &gt;= numChars) ndx = numChars - 1; &#125; else &#123; comdata[ndx] = &#x27;\\0&#x27;; // Terminate the string recvInProgress = false; ndx = 0; newData = true; &#125; &#125; else if (rc == startMarker) &#123; recvInProgress = true; &#125; &#125;&#125;","categories":[{"name":"research","slug":"research","permalink":"http://yoursite.com/categories/research/"}],"tags":[{"name":"Arduino Code","slug":"Arduino-Code","permalink":"http://yoursite.com/tags/Arduino-Code/"}]},{"title":"MATLAB Tips","slug":"matlabCodeSearch","date":"2024-08-08T14:00:00.000Z","updated":"2024-09-06T01:29:14.155Z","comments":true,"path":"2024/08/09/matlabCodeSearch/","link":"","permalink":"http://yoursite.com/2024/08/09/matlabCodeSearch/","excerpt":"General Programming Tips Compute the running time of a function all 1tic; fft(rand(500)); disp( [’it takes ’ num2str(toc) ’s.’] ); Locate the indice of minimum value in a matrice 12[M,I] = min(objMatrice(:)); % &#x27;objMatrice&#x27; is the objective matrix[Irow,Icol] = ind2sub(size(objMatrice),I);","text":"General Programming Tips Compute the running time of a function all 1tic; fft(rand(500)); disp( [’it takes ’ num2str(toc) ’s.’] ); Locate the indice of minimum value in a matrice 12[M,I] = min(objMatrice(:)); % &#x27;objMatrice&#x27; is the objective matrix[Irow,Icol] = ind2sub(size(objMatrice),I); Sort ascending filenames based on number 12345sFile = dir([dir1 &#x27;temp*.mat&#x27;]);%%% sort ascending filenames based on Number[~, reindex] = ... sort(str2double(regexp( &#123;sFile.name&#125;, &#x27;\\d+&#x27;, &#x27;match&#x27;, &#x27;once&#x27; )));sFile = sFile(reindex) ; Writing&#x2F;Reading to a text file a list of 3-uplets. 123456% A is a matrix with 3 rows.fid = fopen(filename,’wt’);fprintf(fid, ’%f %f %f\\n’, A);fclose(fid); % Retrieving the values back from file to matrix B.fid = fopen(filename,’r’);[B,cnt] = fscanf(fid,’%f %f %f’); Create a graphical waitbar 1234567n = 100;h = waitbar(0,’Waiting ...’);for i=1:nwaitbar(i/n);% here perform some stuffendclose(h); Loading issue 123456try load(&#x27;xxx.mat&#x27;) % xcatch datatemp = matfile(&#x27;xxx.mat&#x27;); % x data = datatemp.x;end Sub-function Tricks Create a sub-function that takes optional arguments in a struct 1234567891011121314function y = f(x,options)% parse the structif nargin&lt;2options.null = 0; % force creation of optionsendif isfield(options, ’a’)options.a = 1; % default valueenda = options.a;if isfield(options, ’b’)options.b = 1; % default valueendb = options.b;% Here the body of the function ... note: nargin returns the number of function input arguments given in the call to the currently executing function. Use varargin in function e.g. as following. A single function to generate two-dimensional (2D) line graphs, avoiding a long list of code for the generation of each graphic. PlotSet generates 2D plots, including multiple plots on a page. This code processes varargin asparameter pairs to set options. This makes it easy to expand the options. You can look for more information in the following book. Paluszek, M., and S. Thomas. MATLAB Machine Learning. Apress, 2016. https://books.google.com.au/books?id=jy75vQAACAAJ. Write a function fun(a,b,c) that can take an arbitrary number of arguments 12345function fun(args)default_values = &#123;0.1246,1.2346,8.7643&#125;;args_present = cellfun(@isempty,args);default_values(args_present) = args(args_present);[a b c] = deal(default_values); Load a variable from a .mat file and then place that variable inside a structure with the same name 123456789101112% Load the variableloadedData = load(&#x27;myData.mat&#x27;); % This loads the data into a structure% Extract field names from the loaded datafieldNames = fieldnames(loadedData);% Loop through each variable and assign it to a new structure with the same namefor k = 1:length(fieldNames) varName = fieldNames&#123;k&#125;; dataStruct.(varName) = loadedData.(varName);end% Now dataStruct has fields corresponding to the variables loaded from the .mat file Mathematical Tips Generate n points x sampled uniformly at random on a sphere. 123456% tensor product gaussian is isotropicx = randn(3,n);d = sqrt( x(1,:).ˆ2+x(2,:).ˆ2+x(2,:).ˆ2 );x(1,:) = x(1,:)./d;x(2,:) = x(2,:)./d;x(3,:) = x(3,:)./d; Keep only the n biggest coefficients of a signal x (set the others to 0). 1[tmp,I] = sort(abs(x(:))); x( I(1:end-n) ) = 0; Plotting Draw a 3D sphere. 12345678910p = 20; % precisiont = 0:1/(p-1):1;[th,ph] = meshgrid( t*pi,t*2*pi );x = cos(th);y = sin(th).*cos(ph);z = sin(th).*sin(ph);surf(x,y,z, z.*0);% some pretty rendering optionsshading interp; lighting gouraud;camlight infinite; axis square; axis off; Edit legend 123456789[hhLeg,labelhandles] = legend(ax(1),htext,&#x27;location&#x27;,&#x27;NorthEast&#x27;... ,&#x27;box&#x27;,&#x27;off&#x27;,&#x27;Interpreter&#x27;,&#x27;LaTex&#x27;,&#x27;FontSize&#x27;,fS);% hhLeg.ItemTokenSize =[20 18];labelhandles(5).LineStyle = &#x27;-&#x27;;labelhandles(4).XData = [0.24 0.37];labelhandles(5).XData = labelhandles(4).XData;labelhandles(4).YData = labelhandles(4).YData + 0.07;labelhandles(5).YData = labelhandles(4).YData - 0.14;labelhandles(5).Color = col2(1,:); Copy all properties for Axes 1234567891011121314151617181920212223ax(2) = axes(&#x27;Position&#x27;,ax(1).Position ... ,&#x27;OuterPosition&#x27;,ax(1).OuterPosition ... ,&#x27;InnerPosition&#x27;,ax(1).InnerPosition ... ,&#x27;ActivePositionProperty&#x27;,ax(1).ActivePositionProperty... ,&#x27;ALim&#x27;,ax(1).ALim... ,&#x27;ALimMode&#x27;,ax(1).ALimMode... ,&#x27;color&#x27;,&#x27;none&#x27;... ,&#x27;xtick&#x27;,[],&#x27;ytick&#x27;,[],&#x27;ztick&#x27;,[]... ,&#x27;xcolor&#x27;,&#x27;none&#x27;,&#x27;ycolor&#x27;,&#x27;none&#x27;,&#x27;zcolor&#x27;,&#x27;none&#x27;... ,&#x27;Projection&#x27;,&#x27;perspective&#x27;... ,&#x27;CameraPosition&#x27;,ax(1).CameraPosition ... ,&#x27;CameraPositionMode&#x27;,ax(1).CameraPositionMode... ,&#x27;CameraTarget&#x27;,ax(1).CameraTarget... ,&#x27;CameraTargetMode&#x27;,ax(1).CameraTargetMode... ,&#x27;CameraUpVector&#x27;,ax(1).CameraUpVector... ,&#x27;CameraUpVectorMode&#x27;,ax(1).CameraUpVectorMode... ,&#x27;CameraViewAngle&#x27;,ax(1).CameraViewAngle... ,&#x27;CameraViewAngleMode&#x27;,ax(1).CameraViewAngleMode... ,&#x27;DataAspectRatio&#x27;,ax(1).DataAspectRatio... ,&#x27;DataAspectRatioMode&#x27;,ax(1).DataAspectRatioMode... ); % copyaxes(ax(1),ax(2)) set handle in a figure invisible 1234567set(findall(hFig,&#x27;Type&#x27;,&#x27;arrow&#x27;),&#x27;visible&#x27;,&#x27;off&#x27;)set(findall(hFig,&#x27;Type&#x27;,&#x27;textbox&#x27;),&#x27;visible&#x27;,&#x27;off&#x27;)set(findall(hFig,&#x27;Type&#x27;,&#x27;axes&#x27;),&#x27;visible&#x27;,&#x27;off&#x27;)set(findall(hFig,&#x27;Type&#x27;,&#x27;surf&#x27;),&#x27;visible&#x27;,&#x27;off&#x27;)set(findall(hFig,&#x27;Type&#x27;,&#x27;patch&#x27;),&#x27;visible&#x27;,&#x27;off&#x27;)set(findall(hFig,&#x27;Type&#x27;,&#x27;Line&#x27;),&#x27;visible&#x27;,&#x27;off&#x27;)set(findall(hFig,&#x27;Type&#x27;,&#x27;contour&#x27;),&#x27;visible&#x27;,&#x27;off&#x27;) plot at a specific plane 1234tt = hgtransform(ax(2)); % establish plane % X-axis rotation matrix and Z-axis translation matrixRz = makehgtform(&#x27;translate&#x27;,[0 y(end) 0],&#x27;xrotate&#x27;,1/2*pi,&#x27;yrotate&#x27;,-1/2*pi);set(tt,&#x27;Matrix&#x27;,Rz); Two axes in one figure 12345678910ax(1) = axes(&#x27;box&#x27;,&#x27;on&#x27;);hold(ax(1),&#x27;on&#x27;)ax(2) = axes(&#x27;Position&#x27;,ax(1).Position ... ,&#x27;color&#x27;,&#x27;none&#x27;... ,&#x27;yAxisLocation&#x27;,&#x27;right&#x27;... ,&#x27;box&#x27;,&#x27;off&#x27;... ,&#x27;xTick&#x27;,[]... ...,&#x27;ytickLabel&#x27;,[]... ,&#x27;ycolor&#x27;,[0.5 0.5 0.5]... );hold(ax(2),&#x27;on&#x27;) Iso-contours 123456789101112131415161718192021222324252627[cContourMap,hContourMap] = contourf(gca,XXAB&#x27;,YYAB&#x27;,ZZAB&#x27;);set(hContourMap,&#x27;linestyle&#x27;,&#x27;none&#x27;)yclimColorbar = [0 1];ytickColorbar = 0:0.2:1;colLevelist = 0:0.1:1;hContourMap.LevelList = colLevelist;set(gca,&#x27;clim&#x27;,yclimColorbar)hColorbar = colorbar(gca);titleindex = &#x27;title&#x27;;set(get(hColorbar1,&#x27;title&#x27;),&#x27;string&#x27;... ,titleindex... ,&#x27;FontSize&#x27;,11 ... ,&#x27;interpreter&#x27;,&#x27;LaTex&#x27;... ,&#x27;FontName&#x27;,&#x27;Times New Roman&#x27; ... )set(hColorbar1... ,&#x27;ylim&#x27;,yclimColorbar... ...,&#x27;ylim&#x27;,[0 4]... ,&#x27;ytick&#x27;,ytickColorbar... ,&#x27;Location&#x27;,&#x27;southoutside&#x27;... ... ,&#x27;AxisLocation&#x27;,&#x27;out&#x27;... ,&#x27;Units&#x27;,&#x27;Normalized&#x27;... ...,&#x27;Position&#x27;,[0.1 0.2 0.6 0.03] ... ,&#x27;FontSize&#x27;,11 ... ,&#x27;FontName&#x27;,&#x27;Times New Roman&#x27; ... ) Circular legend for contour lines 1234567891011hFigPos = hFig.Position;xCentre = 0.47;yCentre = 0.18;coll1 = flipud(coll1);radius = 0.07;radii = linspace(0.01,radius,round(size(coll1,1)/2));for iR = 1:length(radii) annotation(hFig,&#x27;ellipse&#x27;, [xCentre - radii(iR)/2, yCentre - radii(iR)*hFigPos(3)/hFigPos(4)/2 ... , radii(iR), radii(iR)*hFigPos(3)/hFigPos(4)], ... &#x27;Color&#x27;, coll1(iR,:), &#x27;LineWidth&#x27;, 1);end Generate gif 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162% Video to GIF Synchronization Script% Created by: Yu Xia% Location: Melbourne, Australia% Date: 2024.08.09% Initialize video file and readervideoFile = &#x27;videoName.mp4&#x27;;videoObj = VideoReader(videoFile);% Set output filenameoutputFilename = &#x27;synchronized_animation.gif&#x27;;% Get total number of framesnumFrames = videoObj.NumFrames;% Create figure and axeshFig = figure(&#x27;Color&#x27;, &#x27;white&#x27;, &#x27;Units&#x27;, &#x27;normalized&#x27;, &#x27;Position&#x27;, [0.1 0.1 0.8 0.8]);ax(1) = axes(&#x27;Parent&#x27;, hFig, &#x27;Position&#x27;, [0.05 0.1 0.4 0.4], &#x27;Box&#x27;, &#x27;on&#x27;, &#x27;Color&#x27;, &#x27;white&#x27;);ax(2) = axes(&#x27;Parent&#x27;, hFig, &#x27;Position&#x27;, [0.5 0.1 0.4 0.4], &#x27;Box&#x27;, &#x27;on&#x27;, &#x27;Color&#x27;, &#x27;white&#x27;);% Hold axes for plottinghold(ax(1), &#x27;on&#x27;);hold(ax(2), &#x27;on&#x27;);% Configure second axesset(ax(2), &#x27;XLim&#x27;, [-60 60], &#x27;YLim&#x27;, [-9 -4], &#x27;TickLength&#x27;, [0.02 0.02], ... &#x27;XTick&#x27;, -60:20:60, &#x27;YTick&#x27;, -9:1:-4, &#x27;Box&#x27;, &#x27;on&#x27;, &#x27;XTickLabelRotation&#x27;, 0);% Set labels for second axesxlabel(ax(2), &#x27;$\\alpha$ ($^\\circ$)&#x27;, &#x27;Interpreter&#x27;, &#x27;LaTeX&#x27;, &#x27;FontSize&#x27;, 12);ylabel(ax(2), &#x27;$E$ (V)&#x27;, &#x27;Interpreter&#x27;, &#x27;LaTeX&#x27;, &#x27;FontSize&#x27;, 12);% Process video framesfor iAlpha = 1:numFrames % Read video frame videoFrame = read(videoObj, iAlpha); currentTime = videoObj.CurrentTime; % Display video frame imshow(videoFrame, &#x27;Parent&#x27;, ax(1)); % Plot data on second axes (replace &#x27;xx&#x27; with actual data) plot(ax(2), xx, xx, &#x27;k&#x27;, &#x27;MarkerSize&#x27;, 4, &#x27;Color&#x27;, col2, &#x27;LineWidth&#x27;, 1.3, &#x27;LineStyle&#x27;, &#x27;-&#x27;); % Capture frame and convert to image frame = getframe(hFig); im = frame2im(frame); % Write frame to GIF if iAlpha == 1 [imind, cm] = rgb2ind(im, 256, &#x27;nodither&#x27;); imwrite(imind, cm, outputFilename, &#x27;gif&#x27;, &#x27;LoopCount&#x27;, inf, &#x27;DelayTime&#x27;, 0.1); else imind = rgb2ind(im, cm, &#x27;nodither&#x27;); imwrite(imind, cm, outputFilename, &#x27;gif&#x27;, &#x27;WriteMode&#x27;, &#x27;append&#x27;, &#x27;DelayTime&#x27;, 0.1); endend% Close figureclose(hFig);disp(&#x27;GIF creation complete.&#x27;); Store section title into a tiff image 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364function metaTiffEdit(printName, sectionName) if nargin &lt; 2 || isempty(sectionName) % Automatically retrieve section title if sectionName is not provided sectionName = getSectionTitleFromActiveScript(); end % Open the TIFF file for editing fileID = Tiff([printName &#x27;.tif&#x27;], &#x27;r+&#x27;); % Get the current script directory and file details [currentDir, Filename, ext] = fileparts(matlab.desktop.editor.getActiveFilename); fprintf(&#x27;current working directory: %s\\n&#x27;, currentDir); % Prepare metadata string metaData = sprintf(&#x27;%s%s%s&#x27;, currentDir, Filename, ext); % Set the TIFF tags fileID.setTag(&#x27;Artist&#x27;, metaData); % fileID.setTag(&#x27;Copyright&#x27;, &#x27;Your Copyright Info&#x27;); % fileID.setTag(&#x27;DateTime&#x27;, datestr(now, 31)); % Using current date and time % fileID.setTag(&#x27;DocumentName&#x27;, &#x27;Document Name&#x27;); fileID.setTag(&quot;ImageDescription&quot;, sectionName); fileID.close;end function sectionTitle = getSectionTitleFromActiveScript() % Get the active editor object activeEditor = matlab.desktop.editor.getActive; % Get the position of the cursor cursorPosition = activeEditor.Selection(1); % Retrieve the content of the script as lines% lines = strsplit(activeEditor.Text, &#x27;\\n&#x27;); lines = splitlines(activeEditor.Text); % Initialize sectionTitle to an empty string sectionTitle = &#x27;&#x27;; numLines = length(lines); cursorPosition = min(cursorPosition,numLines); % Find the most recent section title, starting from the current line for i = cursorPosition:-1:1 if startsWith(strtrim(lines&#123;i&#125;), &#x27;%%&#x27;) &amp;&amp; ... ~startsWith(strtrim(lines&#123;i&#125;), &#x27;%%%&#x27;) sectionTitle = strtrim(lines&#123;i&#125;); break; end end % If no section title was found, default to &#x27;Untitled Section&#x27; if isempty(sectionTitle) sectionTitle = &#x27;Untitled Section&#x27;; end % Optionally, remove the &#x27;%%&#x27; characters from the section title sectionTitle = strrep(sectionTitle, &#x27;%%&#x27;, &#x27;&#x27;);end","categories":[{"name":"research","slug":"research","permalink":"http://yoursite.com/categories/research/"}],"tags":[{"name":"MatLab Code","slug":"MatLab-Code","permalink":"http://yoursite.com/tags/MatLab-Code/"}]},{"title":"P201 Encoder Interface","slug":"P201EncoderInterface","date":"2024-07-29T14:00:00.000Z","updated":"2024-10-08T04:22:01.836Z","comments":true,"path":"2024/07/30/P201EncoderInterface/","link":"","permalink":"http://yoursite.com/2024/07/30/P201EncoderInterface/","excerpt":"The P201 series are single channel encoder interfaces suitable for use with a wide variety of 5V rotary and linear encoders. The USB versions allow encoders to be easily interfaced to and powered from a PC using only a USB cable. The new RS485 encoder interface (P201-9B-RS485) enables long distance, multidrop capability for SSI or BiSS C encoders. Supported by PC based GUI Demonstration software and supplied with USB drivers that emulate a COM Port. Virtual COM Port access enables simple interfacing from LabVIEW, C#.Net, VB.Net, MATLAB. More details can be referred to the data sheet of P201 interface.","text":"The P201 series are single channel encoder interfaces suitable for use with a wide variety of 5V rotary and linear encoders. The USB versions allow encoders to be easily interfaced to and powered from a PC using only a USB cable. The new RS485 encoder interface (P201-9B-RS485) enables long distance, multidrop capability for SSI or BiSS C encoders. Supported by PC based GUI Demonstration software and supplied with USB drivers that emulate a COM Port. Virtual COM Port access enables simple interfacing from LabVIEW, C#.Net, VB.Net, MATLAB. More details can be referred to the data sheet of P201 interface. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697% Function: encoderP201Read% Author: Yu Xia% Date: 2024.7.1 modified in 2024.10.8% Institution: University of Melbourne% Email: xiayudlut@icloud.com% Description: This function communicates with an encoder via a serial port% to read the encoder count, detect reference index, or clear/set the reference.% It incorporates error handling to manage serial communication issues.% The function returns three numbers: the encoder count, the count value at the % z-channel rising edge (reference index), and the status indicating if the reference % is detected.function numbers = encoderP201Read(port, command) % Input: % port - Serial port identifier (e.g., &#x27;COM5&#x27;) % command - Command to send to the encoder (&#x27;?&#x27; for read, &#x27;c&#x27; for clear reference, &#x27;z&#x27; for set to zero) % Output: % numbers - A vector containing: % [encoder count, count value at z-channel, reference status] % or an empty array if the command is &#x27;c&#x27; or &#x27;z&#x27; % Set up parameters baudRate = 9600; % Baud rate for serial communication maxRetries = 3; % Maximum number of retries retryDelay = 0.5; % Delay between retries in seconds % Attempt to communicate with the encoder attempt = 0; success = false; while ~success &amp;&amp; attempt &lt; maxRetries attempt = attempt + 1; try % Initialize serial port sEncoder = serialport(port, baudRate); sEncoder.Timeout = 2; % Set timeout for serial communication % Flush the serial buffer writeline(sEncoder, &#x27;v&#x27;); pause(0.1); read(sEncoder, sEncoder.NumBytesAvailable, &#x27;char&#x27;); % Execute command based on the input switch command case &#x27;?&#x27; % Read encoder data writeline(sEncoder, &#x27;?&#x27;); pause(0.1); encoderStr = read(sEncoder, sEncoder.NumBytesAvailable, &#x27;char&#x27;); pattern = &#x27;\\d+&#x27;; % Regular expression to extract numbers numbers = regexp(encoderStr, pattern, &#x27;match&#x27;); numbers = str2double(numbers); % Convert string array to double array case &#x27;c&#x27; % Clear reference status writeline(sEncoder, &#x27;c&#x27;); pause(0.1); fprintf(&#x27;\\n Clear reference status \\n&#x27;); numbers = []; case &#x27;z&#x27; % Set current count value to zero writeline(sEncoder, &#x27;z&#x27;); pause(0.1); fprintf(&#x27;\\n Set current count value to zero \\n&#x27;); numbers = []; otherwise % Invalid command error(&#x27;Invalid command. Use &#x27;&#x27;?&#x27;&#x27;, &#x27;&#x27;c&#x27;&#x27;, or &#x27;&#x27;z&#x27;&#x27;.&#x27;); end % If everything went well, mark as success success = true; catch ME % Handle communication error and retry fprintf(&#x27;Error: %s. Retrying...\\n&#x27;, ME.message); pause(retryDelay); end % Close serial port connection if exist(&#x27;sEncoder&#x27;, &#x27;var&#x27;) delete(sEncoder); end end % Check if communication was successful if ~success error(&#x27;Failed to communicate with the encoder after %d attempts.&#x27;, maxRetries); endend% Example Usage:% 1. To calibrate the encoder and set the zero position:% encoderP201Read(&#x27;COM5&#x27;, &#x27;z&#x27;);% 2. To read the encoder count, reference index, and status:% data = encoderP201Read(&#x27;COM5&#x27;, &#x27;?&#x27;);% encoderCount = data(1); % Use this for further calculations% referenceIndex = data(2); % Reference index count value% referenceStatus = data(3); % Status if the reference is detected%% After calibration, you can subtract the encoderCount from the initial % zero position count to get the current position relative to the zero angle.","categories":[{"name":"research","slug":"research","permalink":"http://yoursite.com/categories/research/"}],"tags":[{"name":"MatLab Code","slug":"MatLab-Code","permalink":"http://yoursite.com/tags/MatLab-Code/"}]},{"title":"Motor/Encoder Control Code","slug":"motorEncoderController202404","date":"2024-07-25T00:00:00.000Z","updated":"2024-09-16T21:33:49.675Z","comments":true,"path":"2024/07/25/motorEncoderController202404/","link":"","permalink":"http://yoursite.com/2024/07/25/motorEncoderController202404/","excerpt":"The following Arduino should be compatible with the MATLAB motor control code for serial communication.","text":"The following Arduino should be compatible with the MATLAB motor control code for serial communication. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287/**Title: Controller Box CodeDescription: This code is used for a controller box with a single-end encoder and a four-wire step motor (with the current up to 4 A).Created by: YX at Melboune, 202404 *//* * Arduino Code for Controlling Motor and Reading Encoder * * Instructions: * 1. Connect your Arduino board to a serial terminal program (e.g., Arduino IDE&#x27;s Serial Monitor or a dedicated serial terminal software). * 2. Set the baud rate of the serial terminal program to match the baud rate set in this code (115200). * 3. Send command strings to the board via the serial terminal program for various operations. * - To get the encoder value, send the command string &quot;E&quot;. * - To drive the motor forward by a certain number of steps, send the command string &quot;+N&quot;, where N is the desired number of steps. * - To drive the motor backward by a certain number of steps, send the command string &quot;-N&quot;, where N is the desired number of steps. * - To set the motor current, send the command string &quot;A&lt;current&gt;&quot;, where &lt;current&gt; is the desired current value in milliamperes. * 4. The board will process the commands and display the results or feedback in the serial terminal program. */#include &lt;SPI.h&gt;#include &lt;HighPowerStepperDriver.h&gt;#include &quot;Arduino.h&quot;#include &lt;Servo.h&gt;#include &lt;digitalWriteFast.h&gt; // library for high performance reads and writes by jrraines // see http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1267553811/0 // and http://code.google.com/p/digitalwritefast/const uint8_t DirPin = 8;const uint8_t StepPin = 9;const uint8_t CSPin = 10;const uint8_t SleepPin = 7;const uint8_t RstPin = 6;const uint8_t FaultPin = 5;// This period is the length of the delay between steps, which controls the// stepper motor&#x27;s speed. You can increase the delay to make the stepper motor// go slower. If you decrease the delay, the stepper motor will go faster, but// there is a limit to how fast it can go before it starts missing steps.const uint16_t StepPeriodUs = 1000;char ch;float DutyCircle;const byte numChars = 32;char comdata[numChars];int motorState;boolean newData = false;HighPowerStepperDriver sd;// Quadrature encoders#define zChannel 4#define EncoderPinA 2#define EncoderPinB 3#define EncoderIsReversedvolatile bool EncoderBSet;volatile long EncoderTicks = 0;unsigned int flagA = 0;unsigned int flagB = 0;void setup()&#123; Serial.begin(115200); // Serial.println(&quot;Waiting for sending a signal...\\n&quot;); SPI.begin(); sd.setChipSelectPin(CSPin); // Drive the STEP and DIR pins low initially. pinMode(StepPin, OUTPUT); digitalWrite(StepPin, LOW); pinMode(DirPin, OUTPUT); digitalWrite(DirPin, LOW); pinMode(SleepPin, OUTPUT); digitalWrite(SleepPin, HIGH); pinMode(RstPin, OUTPUT); digitalWrite(RstPin, LOW); pinMode(FaultPin, INPUT); // Give the driver some time to power up. delay(10); // Reset the driver to its default settings and clear latched status // conditions. sd.resetSettings(); sd.clearStatus(); // Select auto mixed decay. TI&#x27;s DRV8711 documentation recommends this mode // for most applications, and we find that it usually works well. sd.setDecayMode(HPSDDecayMode::AutoMixed); // Set the current limit. You should change the number here to an appropriate // value for your particular system. sd.setCurrentMilliamps36v4(600); // Set the number of microsteps that correspond to one full step. sd.setStepMode(HPSDStepMode::MicroStep16); // Enable the motor outputs. sd.enableDriver(); // Quardrature pinMode(EncoderPinA, INPUT); // sets pin A as input digitalWrite(EncoderPinA, LOW); // pinMode(EncoderPinB, INPUT); // sets pin B as input digitalWrite(EncoderPinB, LOW); // pinMode(zChannel,INPUT); attachInterrupt(digitalPinToInterrupt(EncoderPinA), HandleInterruptA, RISING);&#125;void loop()&#123; checkStatus(); while (!Serial) &#123; ; // wait for serial port to connect. Needed for native USB &#125; if (Serial.available() &gt; 0) &#123; newData = false; recvWithStartEndMarkers(); if (newData == true)&#123; if (comdata[0] == &#x27;+&#x27; || comdata[0] == &#x27;-&#x27; || comdata[0] == &#x27;A&#x27; || comdata[0] == &#x27;E&#x27;)&#123; ch = comdata[0]; char* numStart = &amp;comdata[1]; // Pointer to the start of the numerical part of the string. char* endptr; long stepp = strtol(numStart, &amp;endptr, 10); if (numStart == endptr) &#123; Serial.println(&quot;Error: No digits were found after the sign. Please re-enter the command.&quot;); return; // Skip the rest of the loop and wait for new input. &#125; else if (*endptr != &#x27;\\0&#x27;) &#123; Serial.println(&quot;Error: Extra characters after number. Please re-enter the command.&quot;); return; // Skip the rest of the loop and wait for new input. &#125; else if (comdata[0] == &#x27;+&#x27; || comdata[0] == &#x27;-&#x27;) &#123; DoSerial(ch, stepp); &#125; else if (comdata[0] == &#x27;A&#x27;) &#123; if (stepp &gt; 1000 || stepp &lt; 200) &#123; Serial.println(&quot;Over/Below Current&quot;); return; &#125; sd.setCurrentMilliamps36v4(stepp); Serial.print(&quot;The motor current is set to be &quot;); Serial.print(stepp); Serial.println(&quot; mA&quot;); &#125; else if (comdata[0] == &#x27;E&#x27;) &#123; if (digitalReadFast(zChannel))&#123; Serial.println(&quot;High&quot;); delay(100); &#125; Serial.print(&quot;number of pulses: &quot;); Serial.println(EncoderTicks); &#125; &#125; else &#123; Serial.println(&quot;Error: Command must start with &#x27;+&#x27;, &#x27;-&#x27;, &#x27;A&#x27;, or &#x27;E&#x27;. Please re-enter the command.&quot;); return; // Skip the rest of the loop and wait for new input. &#125; newData = false; &#125; &#125;&#125;// Sends a pulse on the STEP pin to tell the driver to take one step, and also//delays to control the speed of the motor.void step()&#123; // The STEP minimum high pulse width is 1.9 microseconds. digitalWrite(StepPin, HIGH); delayMicroseconds(3); digitalWrite(StepPin, LOW); delayMicroseconds(3);&#125;// Writes a high or low value to the direction pin to specify what direction to// turn the motor.void setDirection(bool dir)&#123; // The STEP pin must not change for at least 200 nanoseconds before and after // changing the DIR pin. delayMicroseconds(1); digitalWrite(DirPin, dir); delayMicroseconds(1);&#125;//===============================================================================void DoSerial(char ch, long stepp)&#123;// char ch = toupper(Serial.read()); // Read the character we received// // and convert to upper case switch (ch) &#123; case &#x27;+&#x27;: setDirection(0); for(unsigned int x = 0; x &lt; stepp; x++) &#123; step(); delayMicroseconds(StepPeriodUs); checkStatus(); &#125; break; case &#x27;-&#x27;: setDirection(1); for(unsigned int x = 0; x &lt; stepp; x++) &#123; step(); delayMicroseconds(StepPeriodUs); checkStatus(); &#125; break; default: break; &#125;&#125;// ============================================void recvWithStartEndMarkers() &#123; static boolean recvInProgress = false; static byte ndx = 0; char startMarker = &#x27;&lt;&#x27;; char endMarker = &#x27;&gt;&#x27;; char rc; // if (Serial.available() &gt; 0) &#123; while (Serial.available() &gt; 0 &amp;&amp; newData == false) &#123; rc = Serial.read(); delay(2); if (recvInProgress == true) &#123; if (rc != endMarker) &#123; comdata[ndx] = rc; ndx++; if (ndx &gt;= numChars) &#123; ndx = numChars - 1; &#125; &#125; else &#123; comdata[ndx] = &#x27;\\0&#x27;; // terminate the string recvInProgress = false; ndx = 0; newData = true; &#125; &#125; else if (rc == startMarker) &#123; recvInProgress = true; &#125; &#125;&#125;// Interrupt service routines for the quadrature encodervoid HandleInterruptA()//&#123; // Test transition; since the interrupt will only fire on &#x27;rising&#x27; we don&#x27;t need to read pin A EncoderBSet = digitalReadFast(EncoderPinB); // read the input pin // // and adjust counter + if A leads B // #ifdef LeftEncoderIsReversed EncoderTicks -= EncoderBSet ? -1 : +1; // #else // _LeftEncoderTicks += _LeftEncoderBSet ? -1 : +1; // #endif char i; i = digitalRead(EncoderPinB); if (i == 1) flagA += 1; else flagB += 1;&#125; void checkStatus()&#123; motorState = digitalRead(FaultPin); delay(2); if (motorState == 0)&#123; Serial.println(&quot;Faulty&quot;); delay(2); digitalWrite(SleepPin, LOW); &#125;&#125;//============================================ 12345678910111213141516171819202122232425262728293031323334353637383940414243function motorRoting(serialObj, angle, stepsPerRev, microSteps) % motorRoting - Controls the rotation of a motor % % Syntax: motorRoting(serialObj, angle, stepsPerRev, microSteps) % % Inputs: % serialObj - Serial object for communication % angle - Desired rotation angle in degrees % stepsPerRev - Number of steps per full revolution (default: 200) % microSteps - Number of micro-steps (default: 16) % % Example: % motorRoting(s, 90) rotates the motor 90 degrees % with default step and micro-step settings (200 steps/rev and 16 micro-steps). % % Made by YX on 9 July, 2024 % Set default values if not provided if nargin &lt; 3 stepsPerRev = 200; % Default: 200 steps per revolution microSteps = 16; % Default: 16 micro-steps end % Determine rotation direction if angle &gt;= 0 directionSign = &#x27;+&#x27;; else directionSign = &#x27;-&#x27;; end % Calculate the number of steps for the given angle totalSteps = round(abs(angle / 360 * stepsPerRev * microSteps)); % Create the command string to send commandString = [&#x27;&lt;&#x27; directionSign num2str(totalSteps) &#x27;&gt;&#x27;]; % Send the command to the motor controller writeline(serialObj, commandString); % Pause to allow the motor to complete the movement pause(0.2);end","categories":[{"name":"research","slug":"research","permalink":"http://yoursite.com/categories/research/"}],"tags":[{"name":"Arduino Code, MatLab Code","slug":"Arduino-Code-MatLab-Code","permalink":"http://yoursite.com/tags/Arduino-Code-MatLab-Code/"}]},{"title":"Guideline & Technical Document","slug":"pdfAchive","date":"2024-04-19T14:00:00.000Z","updated":"2024-09-07T23:15:26.539Z","comments":true,"path":"2024/04/20/pdfAchive/","link":"","permalink":"http://yoursite.com/2024/04/20/pdfAchive/","excerpt":"","text":"Stepper Motor and Encoder Wiring Kalman Filter 有限元机翼动力学分析","categories":[{"name":"Research","slug":"Research","permalink":"http://yoursite.com/categories/Research/"}],"tags":[{"name":"Device guideline","slug":"Device-guideline","permalink":"http://yoursite.com/tags/Device-guideline/"}]},{"title":"Flow Visualisation","slug":"flowVisualisation","date":"2024-04-11T23:00:00.000Z","updated":"2024-09-07T23:15:26.536Z","comments":true,"path":"2024/04/12/flowVisualisation/","link":"","permalink":"http://yoursite.com/2024/04/12/flowVisualisation/","excerpt":"","text":"","categories":[{"name":"research","slug":"research","permalink":"http://yoursite.com/categories/research/"}],"tags":[]},{"title":"Calculator created by MATLAB","slug":"calculatorMATLABGUI","date":"2024-01-26T21:47:41.000Z","updated":"2024-01-26T13:00:00.000Z","comments":true,"path":"2024/01/27/calculatorMATLABGUI/","link":"","permalink":"http://yoursite.com/2024/01/27/calculatorMATLABGUI/","excerpt":"This is a MATLAB GUI code for an advanced calculator with multiple functions.","text":"This is a MATLAB GUI code for an advanced calculator with multiple functions. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461462463464465466467468469470471472473474475476477478479480481482483484485486487488489490491492493494495496497498499500501502503504505506507508509510511512513514515516517518519520521522523524525526527528529530531532533534535536537538539540541542543544545546547548549550551552553554555556557558559560561562563564565566567568569570571572573574575576577578579580581582583584585586587588589590591592593594595596597598599600601602603604605606607608609610611612613614615616617618619620621622623624625626627628629630631632633634635636637638639640641642643644645646647648649650651652653654655656657658659660661662663664665666667668669670671672673674675676677678679680681682683684685686687688689690691692693694695696697698699700701702703704705706707708709710711712713714715716717718719720721722723724725726727728729730731732733734735736737738739740741742743744745746747748749750751752753754755756757758759760761762763764765766767768769770771772773774775776777778779780781782783784785786787788789790791792793794795796797798799800801802803804805806807808809810811812813814815816817818819820821822823824825826827828829830831832833834835836837838839840841842843844845846847848849850851852853854855856857858859860861862863864865866867868869870871872873874875876877878879880881882883884885886887888889890891892893894895896897898899900901902903904905906907908909910911912913914915916917918919920921922923924925926927928929930931932933934935936937938939940941942943944945946947948949950951952953954955956957958959960961962963964965966967968969970971972973974975976977978979980981982983984985986987988989990991992993994995996function calculatorAdvanced% Create a figure for the calculatorh.fig = figure(&#x27;Name&#x27;, &#x27;Simple Calculator&#x27;, ... &#x27;NumberTitle&#x27;, &#x27;off&#x27;, ... &#x27;MenuBar&#x27;, &#x27;none&#x27;, ... &#x27;Resize&#x27;, &#x27;off&#x27;, ... ...&#x27;Resize&#x27;, &#x27;on&#x27;, ... &#x27;Position&#x27;, [800, 500, 300, 330]... Adjust the position and size as needed ,&#x27;Alphamap&#x27;,0.2 ... ,&#x27;Color&#x27;,[0.95 0.95 0.95]...[87 86 84]/255 ... ...,&#x27;Visible&#x27;,&#x27;off&#x27;... ,&#x27;WindowKeyPressFcn&#x27;,@keyPressCallback); % Listen for key presseslastOperator = &#x27;&#x27;; % To store the last operator usedlastOperand = &#x27;&#x27;; % To store the last operand usedh.figOriginPosition = h.fig.Position;% Create the main panelh.panel = uipanel(&#x27;Parent&#x27;, h.fig, ... &#x27;Position&#x27;, [0, 0, 1, 1]);% Add a logo to the main panellogoImage = imread(&#x27;logo.jpg&#x27;); % Replace &#x27;logo.png&#x27; with the path to your logo imagelogoAxes = axes(&#x27;Parent&#x27;, h.panel, ... &#x27;Units&#x27;,&#x27;Pixels&#x27;,... &#x27;Position&#x27;, [100, 150, 100, 100], ... &#x27;Visible&#x27;, &#x27;off&#x27;);image(logoImage, &#x27;Parent&#x27;, logoAxes);% axis(logoAxes, &#x27;image&#x27;);axis equalaxis off%% Calculator% Create the button to open the calculator interfaceh.openButton = uicontrol(&#x27;Parent&#x27;, h.panel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Position&#x27;, [50, 260, 200, 40], ... &#x27;String&#x27;, &#x27;Open Calculator&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... &#x27;Callback&#x27;, @openCalculator);% Callback function for opening the calculator interface function openCalculator(~, ~) % Hide the main panel and show the calculator interface set(h.panel, &#x27;Visible&#x27;, &#x27;off&#x27;); set(h.fig, &#x27;Color&#x27;, &#x27;white&#x27;); % set(h.fig, &#x27;WindowKeyPressFcn&#x27;, @calculatorKeyPressCallback); % Create the calculator interface createCalculatorInterface(); end% Create the calculator interface function createCalculatorInterface() % Create a panel for the calculator interface h.calculatorPanel = uipanel(&#x27;Parent&#x27;, h.fig, ... &#x27;Position&#x27;, [0, 0, 1, 1]); % Display for the calculator h.display = uicontrol(&#x27;Parent&#x27;,h.calculatorPanel,&#x27;Style&#x27;, &#x27;edit&#x27;, ... &#x27;Position&#x27;, [60+30, 245, 280-80, 30], ... &#x27;FontSize&#x27;, 18, ... &#x27;BackgroundColor&#x27;, [1 1 1], ...[46 45 36]/255, ... &#x27;HorizontalAlignment&#x27;, &#x27;right&#x27;, ... &#x27;ForegroundColor&#x27;,[0.1 0.1 0.1],... &#x27;FontWeight&#x27;,&#x27;Bold&#x27;,... &#x27;String&#x27;, &#x27;&#x27;); h.display2 = uicontrol(&#x27;Parent&#x27;,h.calculatorPanel,&#x27;Style&#x27;, &#x27;edit&#x27;, ... &#x27;Position&#x27;, [60+30, 278, 280-80, 40], ... &#x27;FontSize&#x27;, 12, ... &#x27;BackgroundColor&#x27;, [1 1 1], ...[46 45 36]/255, ... &#x27;HorizontalAlignment&#x27;, &#x27;right&#x27;, ... &#x27;ForegroundColor&#x27;,[0.3 0.3 0.3],... &#x27;String&#x27;, &#x27;&#x27;); % Button size and padding btnSize = [50, 40]; % Width, height padding = [7, 7]; % Padding between buttons startPos = [10, 200]; % Starting position of the first button % Button labels % btns = &#123;&#x27;7&#x27;, &#x27;8&#x27;, &#x27;9&#x27;, &#x27;+&#x27;, &#x27;C&#x27;; ... % &#x27;4&#x27;, &#x27;5&#x27;, &#x27;6&#x27;, &#x27;-&#x27;, &#x27;CE&#x27;; ... % &#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;*&#x27;, &#x27;=&#x27;; ... % &#x27;0&#x27;, &#x27;&#x27;, &#x27;.&#x27;, &#x27;/&#x27;, &#x27;&#x27;&#125;; btns = &#123;char(9003), &#x27;CE&#x27;, &#x27;C&#x27;, char(177), char(8730); ... &#x27;7&#x27;, &#x27;8&#x27;, &#x27;9&#x27;, &#x27;/&#x27;, &#x27;%&#x27;; ... &#x27;4&#x27;, &#x27;5&#x27;, &#x27;6&#x27;, &#x27;*&#x27;, &#x27;1/x&#x27;; ... &#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;-&#x27;, &#x27;=&#x27;;... &#x27;0&#x27;,&#x27;&#x27;,&#x27;.&#x27;,&#x27;+&#x27;,&#x27;&#x27;&#125;; % Create the buttons in a grid numRows = size(btns, 1); numCols = size(btns, 2); h.btn = zeros(numRows, numCols); for row = 1:numRows for col = 1:numCols btnVal = btns&#123;row, col&#125;; if ~isempty(btnVal) btnWidth = btnSize(1); btnHeight = btnSize(2); % Adjust &#x27;=&#x27; button to span two rows if strcmp(btnVal, &#x27;=&#x27;) btnHeight = btnHeight * 2 + padding(2); btnPosition = [startPos(1) + (col - 1) * (btnSize(1) + padding(1)), ... startPos(2) - (row - 1) * (btnSize(2) + padding(2)) - padding(2) - btnSize(2), ... btnWidth, btnHeight]; elseif strcmp(btnVal, &#x27;0&#x27;) btnWidth = btnWidth * 2 + padding(1); btnPosition = [startPos(1) + (col - 1) * (btnSize(1) + padding(1)), ... startPos(2) - (row - 1) * (btnSize(2) + padding(2)) ... btnWidth, btnHeight]; else btnPosition = [startPos(1) + (col - 1) * (btnSize(1) + padding(1)), ... startPos(2) - (row - 1) * (btnSize(2) + padding(2)), ... btnWidth, btnHeight]; end h.btn(row, col) = uicontrol(&#x27;Parent&#x27;,h.calculatorPanel,&#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Position&#x27;, btnPosition, ... &#x27;String&#x27;, btnVal, ... &#x27;FontSize&#x27;, 16, ... &#x27;BackgroundColor&#x27;,[0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;,[50 50 50]/255,... &#x27;Callback&#x27;, &#123;@btnCallback, btnVal&#125;); end end end % Create the button to return to the main panel h.returnButton = uicontrol(&#x27;Parent&#x27;, h.calculatorPanel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Position&#x27;, [10 245 80 60], ... &#x27;String&#x27;, &#x27;Return&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... &#x27;Callback&#x27;, @returnToMainPanel); end% Callback function for button clicks function btnCallback(src, ~, btnVal) current = get(h.display2, &#x27;String&#x27;); switch btnVal case &#123;&#x27;+&#x27;, &#x27;-&#x27;, &#x27;*&#x27;, &#x27;/&#x27;&#125; % Do not add an operator if the string is empty or already ends with an operator if ~isempty(current)% &amp;&amp; ~any(current(end) == &#x27;+-*/&#x27;) set(h.display2, &#x27;String&#x27;, [current btnVal]); % result = eval(current); % set(h.display, &#x27;String&#x27;, num2str(result)); % set(h.display2, &#x27;String&#x27;, result); if any(current(end) == &#x27;+-*/&#x27;) set(h.display2, &#x27;String&#x27;, [current(1:end-1) btnVal]); end end case &#x27;CE&#x27; % Clear the last entry if ~isempty(current) set(h.display2, &#x27;String&#x27;, current(1:end-1)); end case &#x27;=&#x27; % Calculate the result or repeat the last operation if isempty(lastOperator) || isempty(lastOperand) % If there&#x27;s no last operation, perform the current calculation try result = eval(current); set(h.display, &#x27;String&#x27;, num2str(result)); % Store the last operand and operator for repeated &quot;=&quot; presses tokens = regexp(current, &#x27;(.*?)([\\+\\-\\*\\/])(\\d+\\.?\\d*)$&#x27;, &#x27;tokens&#x27;); if ~isempty(tokens) lastOperator = tokens&#123;1&#125;&#123;2&#125;; lastOperand = tokens&#123;1&#125;&#123;3&#125;; end catch % If there&#x27;s an error in evaluation, display an error message set(h.display, &#x27;String&#x27;, &#x27;Error&#x27;); end else % If there&#x27;s a last operation, repeat it with the current result try % Get the current result to use as the first operand currentResult = get(h.display, &#x27;String&#x27;); % Repeat the operation using the last operand and operator newExpression = [currentResult lastOperator lastOperand]; result = eval(newExpression); set(h.display, &#x27;String&#x27;, num2str(result)); set(h.display2,&#x27;String&#x27;,[get(h.display2, &#x27;String&#x27;) lastOperator lastOperand]) catch % If there&#x27;s an error, clear last operation and display an error message lastOperator = &#x27;&#x27;; lastOperand = &#x27;&#x27;; set(h.display, &#x27;String&#x27;, &#x27;Error&#x27;); end end % Clear the last operation if &#x27;C&#x27; is pressed case &#x27;C&#x27; lastOperator = &#x27;&#x27;; lastOperand = &#x27;&#x27;; set(h.display, &#x27;String&#x27;, &#x27;&#x27;); set(h.display2, &#x27;String&#x27;, &#x27;&#x27;); case char(9003) % Delete the last character if ~isempty(current) set(h.display2, &#x27;String&#x27;, current(1:end-1)); end case char(177) % Plus-minus (change sign) tokens = regexp(current, &#x27;(.*?)([\\+\\-\\*\\/]|^)(\\d+\\.?\\d*)$&#x27;, &#x27;tokens&#x27;); if ~isempty(tokens) % tokens&#123;1&#125; should be a cell with the parts: &#123;before, operator, number&#125; before = tokens&#123;1&#125;&#123;1&#125;; operator = tokens&#123;1&#125;&#123;2&#125;; lastNum = tokens&#123;1&#125;&#123;3&#125;; if isempty(operator) operator = &#x27;-&#x27;; elseif strcmp(operator(end),&#x27;-&#x27;) operator(end) = &#x27;+&#x27;; elseif strcmp(operator(end),&#x27;+&#x27;) operator(end) = &#x27;-&#x27;; end % Reconstruct the display string newDisplay = [before, operator, lastNum]; set(h.display2, &#x27;String&#x27;, newDisplay); end case char(8730) tokens = regexp(current, &#x27;(.*?)([\\+\\-\\*\\/]|^)(\\d+\\.?\\d*)$&#x27;, &#x27;tokens&#x27;); if ~isempty(tokens) % tokens&#123;1&#125; should be a cell with the parts: &#123;before, operator, number&#125; before = tokens&#123;1&#125;&#123;1&#125;;operator = tokens&#123;1&#125;&#123;2&#125;;lastNum = tokens&#123;1&#125;&#123;3&#125;; % Take the square root of the last number sqrtLastNum = num2str(sqrt(str2double(lastNum))); % Reconstruct the display string newDisplay = [before, operator, sqrtLastNum]; set(h.display2, &#x27;String&#x27;, newDisplay); end case &#x27;%&#x27; tokens = regexp(current, &#x27;(.*?)([\\+\\-\\*\\/]|^)(\\d+\\.?\\d*)$&#x27;, &#x27;tokens&#x27;); if ~isempty(tokens) % tokens&#123;1&#125; should be a cell with the parts: &#123;before, operator, number&#125; before = tokens&#123;1&#125;&#123;1&#125;;operator = tokens&#123;1&#125;&#123;2&#125;;lastNum = tokens&#123;1&#125;&#123;3&#125;; % Take the square root of the last number sqrtLastNum = num2str(str2double(lastNum)*0.01); % Reconstruct the display string newDisplay = [before, operator, sqrtLastNum]; set(h.display2, &#x27;String&#x27;, newDisplay); end otherwise % For numbers and decimal point, append to the display set(h.display2, &#x27;String&#x27;, [current btnVal]); end set(src, &#x27;enable&#x27;, &#x27;off&#x27;); drawnow; set(src, &#x27;enable&#x27;, &#x27;on&#x27;); end% Key press callback function function keyPressCallback(~, event) % Mapping from key names to button labels keyToButtonMap = containers.Map(... &#123;&#x27;numpad0&#x27;, &#x27;numpad1&#x27;, &#x27;numpad2&#x27;, &#x27;numpad3&#x27;, &#x27;numpad4&#x27;, ... &#x27;numpad5&#x27;, &#x27;numpad6&#x27;, &#x27;numpad7&#x27;, &#x27;numpad8&#x27;, &#x27;numpad9&#x27;, ... &#x27;0&#x27;, &#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;, &#x27;5&#x27;, &#x27;6&#x27;, &#x27;7&#x27;, &#x27;8&#x27;, &#x27;9&#x27;, ... &#x27;add&#x27;, &#x27;plus&#x27;, &#x27;subtract&#x27;, &#x27;minus&#x27;, &#x27;multiply&#x27;, &#x27;divide&#x27;, ... &#x27;decimal&#x27;, &#x27;period&#x27;, &#x27;return&#x27;, &#x27;equal&#x27;,&#x27;enter&#x27; ,&#x27;escape&#x27;, &#x27;c&#x27;, ... &#x27;backspace&#x27;, &#x27;ce&#x27;&#125;, ... &#123;&#x27;0&#x27;, &#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;, &#x27;5&#x27;, &#x27;6&#x27;, &#x27;7&#x27;, &#x27;8&#x27;, &#x27;9&#x27;, ... &#x27;0&#x27;, &#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;, &#x27;5&#x27;, &#x27;6&#x27;, &#x27;7&#x27;, &#x27;8&#x27;, &#x27;9&#x27;, ... &#x27;+&#x27;, &#x27;+&#x27;, &#x27;-&#x27;, &#x27;-&#x27;, &#x27;*&#x27;, &#x27;/&#x27;, &#x27;.&#x27;, &#x27;.&#x27;, &#x27;=&#x27;, &#x27;=&#x27;, &#x27;=&#x27;, ... &#x27;C&#x27;, &#x27;C&#x27;, &#x27;CE&#x27;, &#x27;CE&#x27;&#125;); % Get the button label from the map if it exists if keyToButtonMap.isKey(event.Key) btnVal = keyToButtonMap(event.Key); btnCallback([], [], btnVal); % Call the button callback directly end end%% Word Lookup% Create the button to open the English word lookup interfaceh.wordButton = uicontrol(&#x27;Parent&#x27;, h.panel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Position&#x27;, [50, 100, 200, 40], ... &#x27;String&#x27;, &#x27;English Word Lookup&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... &#x27;Callback&#x27;, @openWordLookupInterface);% Callback function for opening the English word lookup interface function openWordLookupInterface(~, ~) % Hide the main panel and show the word lookup interface set(h.panel, &#x27;Visible&#x27;, &#x27;off&#x27;); set(h.fig, &#x27;Color&#x27;, &#x27;white&#x27;); set(h.fig, &#x27;WindowKeyPressFcn&#x27;, @wordLookupKeyPressCallback); % Create the word lookup interface createWordLookupInterface(); end% Create the word lookup interface function createWordLookupInterface() % Create a panel for the word lookup interface h.wordLookupPanel = uipanel(&#x27;Parent&#x27;, h.fig, ... &#x27;Position&#x27;, [0, 0, 1, 1]); % Create a button to return to the main panel h.returnButton = uicontrol(&#x27;Parent&#x27;, h.wordLookupPanel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Position&#x27;, [50, 50, 200, 40], ... &#x27;String&#x27;, &#x27;Return to Main Panel&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... &#x27;Callback&#x27;, @returnToMainPanel); % Create a button to select an Excel file and load the data h.selectButton = uicontrol(&#x27;Parent&#x27;, h.wordLookupPanel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Position&#x27;, [50, 100, 200, 40], ... &#x27;String&#x27;, &#x27;Select Excel File&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... &#x27;Callback&#x27;, @selectExcelFile); % Create an edit box for typing English words h.editEnglish = uicontrol(&#x27;Parent&#x27;, h.wordLookupPanel, ... &#x27;Style&#x27;, &#x27;edit&#x27;, ... &#x27;Position&#x27;, [50, 180, 200, 30], ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [1 1 1], ... &#x27;HorizontalAlignment&#x27;, &#x27;left&#x27;, ... &#x27;String&#x27;, &#x27;&#x27;, ... &#x27;Callback&#x27;, @lookupTranslation); % h.displayEnglish = uicontrol(&#x27;Parent&#x27;, h.wordLookupPanel, ... % &#x27;Style&#x27;, &#x27;text&#x27;, ... % &#x27;Position&#x27;, [50, 180, 60, 30], ... % &#x27;FontSize&#x27;, 14, ... % &#x27;BackgroundColor&#x27;,&#x27;none&#x27;, ... % &#x27;HorizontalAlignment&#x27;, &#x27;left&#x27;, ... % &#x27;String&#x27;, &#x27;English&#x27;, ... % &#x27;Callback&#x27;, @lookupTranslation); % Set the key press callback function for the edit box set(h.editEnglish, &#x27;KeyPressFcn&#x27;, @wordLookupKeyPressCallback); % Create a text box for displaying corresponding Chinese translations h.textChinese = uicontrol(&#x27;Parent&#x27;, h.wordLookupPanel, ... &#x27;Style&#x27;, &#x27;text&#x27;, ... &#x27;Position&#x27;, [50, 220, 200, 30], ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [1 1 1], ... &#x27;HorizontalAlignment&#x27;, &#x27;left&#x27;, ... &#x27;String&#x27;, &#x27;&#x27;); % Create a button to trigger the lookup operation h.lookupButton = uicontrol(&#x27;Parent&#x27;, h.wordLookupPanel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Position&#x27;, [50, 260, 60, 40], ... &#x27;String&#x27;, &#x27;Lookup&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... &#x27;Callback&#x27;, @lookupButtonCallback); end% Callback function for selecting an Excel file and loading the data function selectExcelFile(~, ~) % Prompt the user to select an Excel file [fileName, pathName] = uigetfile(&#x27;*.xlsx&#x27;, &#x27;Select Excel File&#x27;); % Check if the user clicked Cancel if fileName == 0 return; end % Construct the full file path filePath = fullfile(pathName, fileName); % Read the Excel file try dataTable = readcell(filePath); h.data = dataTable(:,1:2); catch ME errordlg(&#x27;Error reading Excel file.&#x27;, &#x27;Error&#x27;, &#x27;modal&#x27;); return; end end% Callback function for looking up the translation function lookupTranslation(src, ~) englishWord = string(get(src, &#x27;String&#x27;)); % Check if the loaded data is empty or not if ~isfield(h,&#x27;data&#x27;) set(h.textChinese, &#x27;String&#x27;, &#x27;No Dictionary Loaded&#x27;); return; end % Find the corresponding translation in the loaded data % (Assuming the first column contains English words and the second column contains Chinese translations) englishColumn = string(h.data(:, 1)); [~, idx] = ismember(englishWord, englishColumn); if idx &gt; 0 chineseTranslation = h.data(idx, 2); set(h.textChinese, &#x27;String&#x27;, chineseTranslation&#123;1&#125;); else set(h.textChinese, &#x27;String&#x27;, &#x27;Translation not found&#x27;); end end% Callback function for the lookup button function lookupButtonCallback(~, ~) lookupTranslation(h.editEnglish); end% Key press callback function for the word lookup interface function wordLookupKeyPressCallback(~, event) % Get the key value from the event keyValue = event.Key; % Check if the key value is &#x27;return&#x27; or &#x27;enter&#x27; if strcmpi(keyValue, &#x27;return&#x27;) || strcmpi(keyValue, &#x27;enter&#x27;) lookupTranslation(h.editEnglish); end end%% Stock Market%%% Stock Market Interface %%%% Create the button to open the Stock Market interfaceh.StockButton = uicontrol(&#x27;Parent&#x27;, h.panel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Position&#x27;, [50, 40, 200, 40], ... &#x27;String&#x27;, &#x27;Stock Market&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... &#x27;Callback&#x27;, @openStockMarketInterface); function openStockMarketInterface(~, ~) set(h.panel, &#x27;Visible&#x27;, &#x27;off&#x27;); set(h.fig, &#x27;Color&#x27;, &#x27;white&#x27;); % set(h.fig, &#x27;WindowKeyPressFcn&#x27;, @wordLookupKeyPressCallback); createStockMarketInterface(); end% Create the word lookup interface function createStockMarketInterface() % Create a panel for the interface h.fig.Position = [300 400 500 600]; h.StockMarketPanel = uipanel(&#x27;Parent&#x27;, h.fig, ... &#x27;Position&#x27;, [0, 0, 1, 1]); % Create a button to return to the main panel h.returnButton = uicontrol(&#x27;Parent&#x27;, h.StockMarketPanel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Position&#x27;, [50, 10, 180, 30], ... &#x27;String&#x27;, &#x27;Return to Main Panel&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... &#x27;Callback&#x27;, @returnToMainPanel); h.webSite = uicontrol(&#x27;Parent&#x27;, h.StockMarketPanel, ... &#x27;Style&#x27;, &#x27;text&#x27;, ... &#x27;Position&#x27;, [105, 545, 300, 40], ... &#x27;String&#x27;, &#x27;搜狐证券上证指数历史数据爬取&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255 ..., ... ... &#x27;Callback&#x27;, @selectExcelFile ); h.webButton = uicontrol(&#x27;Parent&#x27;, h.StockMarketPanel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Position&#x27;, [50, 50, 180, 30], ... &#x27;String&#x27;, &#x27;Crawl a website&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... &#x27;Callback&#x27;, @getWebData); % Create a table within the figure columnNames = &#123;&#x27;日期&#x27;, &#x27;开盘价&#x27;, &#x27;收盘价&#x27;, &#x27;最低价&#x27;, &#x27;最高价&#x27;&#125;; h.webTable = uitable(&#x27;Parent&#x27;,h.StockMarketPanel, &#x27;Position&#x27;, [50, 100, 420, 450], &#x27;ColumnName&#x27;, columnNames); % Store the table handle in the button&#x27;s UserData for later access in the callback h.webButton.UserData = h.webTable; % Button to export table data to Excel h.exportExcelButton = uicontrol(&#x27;Parent&#x27;, h.StockMarketPanel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Position&#x27;, [300, 50, 180, 30], ... &#x27;String&#x27;, &#x27;Export to Excel&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... &#x27;Callback&#x27;, @exportToExcel); % Button to export table data to TXT h.exportTxtButton = uicontrol(&#x27;Parent&#x27;, h.StockMarketPanel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Position&#x27;, [300, 10, 180, 30], ... &#x27;String&#x27;, &#x27;Export to TXT&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... &#x27;Callback&#x27;, @exportToTxt); h.webPlottingPanel = uipanel(&#x27;Parent&#x27;,h.StockMarketPanel,&#x27;Units&#x27;,h.webTable.Units,&#x27;Position&#x27;, h.webTable.Position); h.webPlottingPanel.Visible = &#x27;off&#x27;; % Button to plot table data h.plotToggleButton = uicontrol(&#x27;Parent&#x27;, h.StockMarketPanel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Position&#x27;, [10, 558, 60, 30], ... &#x27;String&#x27;, &#x27;Plot&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... &#x27;Callback&#x27;, @createToggleButton); end function historicalStructArray = getWebData(src, ~) h.webTable = src.UserData; url = &#x27;https://q.stock.sohu.com/hisHq?code=zs_000001&amp;stat=1&amp;order=D&amp;period=d&amp;callback=historySearchHandler&amp;rt=jsonp&amp;0.41374664091573843&#x27;; jsonpStr = webread(url); % Use regexprep to remove the padding around the JSON object jsonStr = regexprep(jsonpStr, &#x27;^[^(]*\\((.*)\\)[^)]*$&#x27;, &#x27;$1&#x27;); % Parse the JSON string into a MATLAB structure data1 = jsondecode(jsonStr); % Access the &#x27;hq&#x27; data which contains historical stock data historicalData = data1.hq; % Now process `historicalData` as needed. % Initialize an empty struct array with the fields you mentioned historicalStructArray = struct(&#x27;date&#x27;, &#123;&#125;, &#x27;openPrice&#x27;, &#123;&#125;, &#x27;closePrice&#x27;, &#123;&#125;, ... &#x27;priceChange&#x27;, &#123;&#125;, &#x27;percentChange&#x27;, &#123;&#125;, &#x27;lowPrice&#x27;, &#123;&#125;, ... &#x27;highPrice&#x27;, &#123;&#125;, &#x27;volume&#x27;, &#123;&#125;, &#x27;anotherFinancialFigure&#x27;, &#123;&#125;, &#x27;placeholder&#x27;, &#123;&#125;); for i = 1:length(historicalData) % Assign each field from the cell array to the corresponding field in the struct historicalStructArray(i).date = historicalData&#123;i&#125;&#123;1&#125;; historicalStructArray(i).openPrice = historicalData&#123;i&#125;&#123;2&#125;; historicalStructArray(i).closePrice = historicalData&#123;i&#125;&#123;3&#125;; historicalStructArray(i).priceChange = historicalData&#123;i&#125;&#123;4&#125;; historicalStructArray(i).percentChange = historicalData&#123;i&#125;&#123;5&#125;; historicalStructArray(i).lowPrice = historicalData&#123;i&#125;&#123;6&#125;; historicalStructArray(i).highPrice = historicalData&#123;i&#125;&#123;7&#125;; historicalStructArray(i).volume = historicalData&#123;i&#125;&#123;8&#125;; % historicalStructArray(i).anotherFinancialFigure = historicalData&#123;i&#125;&#123;9&#125;; % historicalStructArray(i).placeholder = historicalData&#123;i&#125;&#123;10&#125;; % Assuming there is a 10th field for placeholder end tableData = &#123;historicalStructArray.date; historicalStructArray.openPrice; ... historicalStructArray.closePrice; historicalStructArray.lowPrice; ... historicalStructArray.highPrice&#125;&#x27;; % Update the table with the new data set(h.webTable, &#x27;Data&#x27;, tableData); % Adjust column width based on the data set(h.webTable, &#x27;ColumnWidth&#x27;, &#123;100, 80, 80, 80, 80&#125;); end% create a toggle for plotting function createToggleButton(~,~) if isempty(h.webTable.Data) return end if isfield(h,&#x27;ax&#x27;) &amp;&amp; isfield(h,&#x27;webPlottingPanel&#x27;) if strcmp(h.webPlottingPanel.Visible, &#x27;on&#x27;) h.webPlottingPanel.Visible = &#x27;off&#x27;; else h.webPlottingPanel.Visible = &#x27;on&#x27;; end return else % h.figwebData = figure(&#x27;NumberTitle&#x27;,&#x27;off&#x27;, &#x27;MenuBar&#x27;, &#x27;none&#x27;, ... % &#x27;Resize&#x27;, &#x27;off&#x27;, ... % ...&#x27;Resize&#x27;, &#x27;on&#x27;, ... % &#x27;Position&#x27;, h.webTable.Position... Adjust the position and size as needed % ,&#x27;Alphamap&#x27;,0.2 ... % ,&#x27;Color&#x27;,[0.95 0.95 0.95],&#x27;Parent&#x27;); h.webPlottingPanel.Visible = &#x27;on&#x27;; h.ax = axes(&#x27;Parent&#x27;,h.webPlottingPanel,&#x27;box&#x27;,&#x27;on&#x27;,&#x27;Units&#x27;,&#x27;Normalized&#x27;,&#x27;Position&#x27;,[0.13 0.16 0.76 0.76]); h.zoomButton = uicontrol(&#x27;Parent&#x27;, h.webPlottingPanel, ... &#x27;Style&#x27;, &#x27;togglebutton&#x27;, ... &#x27;Units&#x27;,&#x27;Normalized&#x27;,... &#x27;Position&#x27;, [0.1+0.02, 0.92, 0.18, 0.08], ... &#x27;String&#x27;, &#x27;Zoom&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... ...&#x27;Value&#x27;,0, ... &#x27;Callback&#x27;, @zoomToggle); h.dataCursorButton = uicontrol(&#x27;Parent&#x27;, h.webPlottingPanel, ... &#x27;Style&#x27;, &#x27;togglebutton&#x27;, ... &#x27;Units&#x27;,&#x27;Normalized&#x27;,... &#x27;Position&#x27;, [0.32, 0.92, 0.22, 0.08], ... &#x27;String&#x27;, &#x27;Data Cursor&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... ...&#x27;Value&#x27;,0, ... &#x27;Callback&#x27;, @dataCursorToggle); h.panButton = uicontrol(&#x27;Parent&#x27;, h.webPlottingPanel, ... &#x27;Style&#x27;, &#x27;togglebutton&#x27;, ... &#x27;Units&#x27;,&#x27;Normalized&#x27;,... &#x27;Position&#x27;, [0.54+0.02, 0.92, 0.18, 0.08], ... &#x27;String&#x27;, &#x27;Pan&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... ...&#x27;Value&#x27;,0, ... &#x27;Callback&#x27;, @panToggle); % You would call this function typically from a &#x27;Restore&#x27; button callback like this: uicontrol(&#x27;Parent&#x27;, h.webPlottingPanel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Units&#x27;,&#x27;Normalized&#x27;,... &#x27;Position&#x27;, [0.76, 0.92, 0.22, 0.08], ... &#x27;String&#x27;, &#x27;Restore&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... ...&#x27;Value&#x27;,0, ... &#x27;Callback&#x27;, @restorePlot); h.exportWebPlot = uicontrol(&#x27;Parent&#x27;, h.webPlottingPanel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Units&#x27;,&#x27;Normalized&#x27;,... &#x27;Position&#x27;, [0.02, 0.02, 0.30, 0.08], ... &#x27;String&#x27;, &#x27;Export PNG&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... ...&#x27;Value&#x27;,0, ... &#x27;Callback&#x27;, @exportPlot); h.exportWebPlot = uicontrol(&#x27;Parent&#x27;, h.webPlottingPanel, ... &#x27;Style&#x27;, &#x27;pushbutton&#x27;, ... &#x27;Units&#x27;,&#x27;Normalized&#x27;,... &#x27;Position&#x27;, [0.70, 0.02, 0.30, 0.08], ... &#x27;String&#x27;, &#x27;Export Word&#x27;, ... &#x27;FontSize&#x27;, 14, ... &#x27;BackgroundColor&#x27;, [0.94 0.94 0.94], ... &#x27;ForegroundColor&#x27;, [50 50 50]/255, ... ...&#x27;Value&#x27;,0, ... &#x27;Callback&#x27;, @exportWord); % Convert webData.data to a numeric matrix if they are stored as strings % Get the data from the webTable data = get(h.webTable, &#x27;Data&#x27;); % Convert cell array to table numericData = str2double(data); % Extract the Open, High, Low, Close data ohlcData = numericData(:, 2:5); % Now, convert the date strings to a datetime array dates = datetime(data(:,1), &#x27;InputFormat&#x27;, &#x27;yyyy-MM-dd&#x27;); tableTMW = timetable(dates,ohlcData(:,1),ohlcData(:,4),ohlcData(:,3),ohlcData(:,2)); tableTMW.Properties.VariableNames = &#123;&#x27;open&#x27;;&#x27;high&#x27;;&#x27;low&#x27;;&#x27;close&#x27;&#125;; % Use the Financial Toolbox candle function to create the plot hCandle = candle(h.ax,tableTMW, &#x27;blue&#x27;); h.ax.XTickLabelRotation = 0; grid on set(h.ax,&#x27;ylim&#x27;,[2500 3200],&#x27;FontSize&#x27;,13,&#x27;FontName&#x27;,&#x27;Times New Roman&#x27;,&#x27;TickLength&#x27;,[0.022 0.022]); % Label the axes and title xlabel(&#x27;Date&#x27;,&#x27;FontSize&#x27;,14,&#x27;FontName&#x27;,&#x27;Times New Roman&#x27;); ylabel(&#x27;Price&#x27;,&#x27;FontSize&#x27;,14,&#x27;FontName&#x27;,&#x27;Times New Roman&#x27;); modifyCandleStick(); end end% Callback function to export table data to Excel function exportToExcel(~, ~) % Get the data from the webTable data = get(h.webTable, &#x27;Data&#x27;); % Convert cell array to table T = cell2table(data, &#x27;VariableNames&#x27;, h.webTable.ColumnName); % Define Excel file name excelFileName = &#x27;stock_data.xlsx&#x27;; % Write table data to Excel file writetable(T, excelFileName); disp([&#x27;Data exported to &#x27;, excelFileName]); end% Callback function to export table data to TXT function exportToTxt(~, ~) % Get the data from the webTable data = get(h.webTable, &#x27;Data&#x27;); % Define TXT file name txtFileName = &#x27;stock_data.txt&#x27;; % Open the TXT file for writing fileID = fopen(txtFileName, &#x27;wt&#x27;); % Write the headers fprintf(fileID, &#x27;%s\\t%s\\t%s\\t%s\\t%s\\n&#x27;, h.webTable.ColumnName&#123;:&#125;); % Write the data for i = 1:size(data, 1) fprintf(fileID, &#x27;%s\\t%s\\t%s\\t%s\\t%s\\n&#x27;, data&#123;i, :&#125;); end % Close the file fclose(fileID); disp([&#x27;Data exported to &#x27;, txtFileName]); end function exportToExcelWithColor(~,~) % Get the data from the webTable data = get(h.webTable, &#x27;Data&#x27;); % Convert cell array to table T = cell2table(data, &#x27;VariableNames&#x27;, h.webTable.ColumnName); % Define Excel file name excelFileName = &#x27;stock_data.xlsx&#x27;; % Write table data to Excel file writetable(T, excelFileName); % Start an ActiveX server to Excel Excel = actxserver(&#x27;Excel.Application&#x27;); Excel.Visible = true; % if you want to see this happen Workbook = Excel.Workbooks.Open(fullfile(pwd, excelFileName)); Sheets = Excel.ActiveWorkbook.Sheets; Sheet = Sheets.Item(1); % assumes data is in the first sheet % Get range of cells where data is written Range = Sheet.Range(&#x27;B2:E2&#x27;); % Adjust range for your data Range.Resize(size(data,1), size(data,2)).Interior.ColorIndex = 0; % Clear any existing colors % Loop over each row and set color based on condition for i = 1:size(data,1) cellOpenPrice = Sheet.Range([&#x27;B&#x27; num2str(i+1)]); cellClosePrice = Sheet.Range([&#x27;C&#x27; num2str(i+1)]); if cellClosePrice.Value &gt; cellOpenPrice.Value cellClosePrice.Interior.Color = 255; % Red elseif cellClosePrice.Value &lt; cellOpenPrice.Value cellClosePrice.Interior.Color = 5287936; % Green end end % Save and close Workbook.Save; Workbook.Close; Excel.Quit; end function zoomToggle(src,~) % Toggle the zoom state based on the button&#x27;s value if get(src, &#x27;Value&#x27;) zoom(h.ax, &#x27;on&#x27;); set(src, &#x27;BackgroundColor&#x27;, [0.5, 0.5, 0.5]); % Change color to indicate &#x27;on&#x27; state else zoom(h.ax, &#x27;off&#x27;); set(src, &#x27;BackgroundColor&#x27;, [0.94, 0.94, 0.94]); % Reset color to default end end function dataCursorToggle(src,~) % Toggle the data cursor mode based on the button&#x27;s value if get(src, &#x27;Value&#x27;) datacursormode(h.fig, &#x27;on&#x27;); set(src, &#x27;BackgroundColor&#x27;, [0.5, 0.5, 0.5]); % Change color to indicate &#x27;on&#x27; state else datacursormode(h.fig, &#x27;off&#x27;); set(src, &#x27;BackgroundColor&#x27;, [0.94, 0.94, 0.94]); % Reset color to default end end function panToggle(src,~) % Toggle the rotate 3D state based on the button&#x27;s value if get(src, &#x27;Value&#x27;) pan(h.ax, &#x27;on&#x27;); set(src, &#x27;BackgroundColor&#x27;, [0.5, 0.5, 0.5]); % Change color to indicate &#x27;on&#x27; state else pan(h.ax, &#x27;off&#x27;); set(src, &#x27;BackgroundColor&#x27;, [0.94, 0.94, 0.94]); % Reset color to default end end function restorePlot(src, ~) % Disable all interactive modes updateUIControls(); zoom(h.ax, &#x27;off&#x27;); datacursormode(h.fig, &#x27;off&#x27;); pan(h.ax, &#x27;off&#x27;); % Reset the view to the default 2D view view(h.ax, 2); % Reset zoom level to the default (showing all data) axis(h.ax, &#x27;auto&#x27;); % Update any UI controls if they exist (e.g., toggle buttons) end function updateUIControls() % Assuming you have stored the UI control handles in &#x27;h.zoomBtn&#x27;, etc. % Reset the state of the toggle buttons to &#x27;off&#x27; if isfield(h, &#x27;zoomButton&#x27;) % disp([&#x27;Zoom Button Handle: &#x27;, num2str(h.zoomButton)]); % Debugging line set(h.zoomButton, &#x27;Value&#x27;, 0,&#x27;BackgroundColor&#x27;,[0.94 0.94 0.94]); end if isfield(h, &#x27;dataCursorButton&#x27;) set(h.dataCursorButton, &#x27;Value&#x27;, 0,&#x27;BackgroundColor&#x27;,[0.94 0.94 0.94]); end if isfield(h, &#x27;panButton&#x27;) set(h.panButton, &#x27;Value&#x27;, 0,&#x27;BackgroundColor&#x27;,[0.94 0.94 0.94]); end set(h.fig, &#x27;HandleVisibility&#x27;, &#x27;on&#x27;); end function exportPlot(src, ~) % Ask user for file name and location to save the PNG [file, path] = uiputfile(&#x27;export.png&#x27;, &#x27;Save image as&#x27;); if isequal(file, 0) || isequal(path, 0) disp(&#x27;User clicked cancel.&#x27;); return; else filename = fullfile(path, file); end figTemp = figure; figTemp.Visible = &#x27;off&#x27;; axTemp = h.ax; axTemp1 = copyobj(axTemp,figTemp); set(axTemp1,&#x27;Parent&#x27;,figTemp); % You might need to make sure &#x27;h.ax&#x27; is the handle to your axes print(figTemp,filename, &#x27;-dpng&#x27;,&#x27;-r300&#x27;); disp([&#x27;Plot saved as &#x27;, filename]); % Optional message to indicate success end function exportWord(src, ~) % Ask user for file name and location to save the PNG [file, path] = uiputfile(&#x27;export.doc&#x27;, &#x27;Save file as&#x27;); if isequal(file, 0) || isequal(path, 0) disp(&#x27;User clicked cancel.&#x27;); return; else filename = fullfile(path, file); end % Create a Word application object wordApp = actxserver(&#x27;Word.Application&#x27;); % Make Word application visible (optional) wordApp.Visible = 1; % Create a new document wordDoc = wordApp.Documents.Add; % Add content to the Word document wordDoc.Paragraphs.Add; % Add a new paragraph wordDoc.Paragraphs.Item(1).Range.Text = &#x27;This is a sample paragraph.&#x27;; % Insert the PNG figure into the Word document imagePath = &#x27;export.png&#x27;; shape = wordDoc.Shapes.AddPicture(imagePath, false, true); % Save the Word document wordDoc.SaveAs2(filename); % Close the Word document wordDoc.Close; % Quit the Word application wordApp.Quit; % Release the COM objects wordDoc.release; wordApp.release; end function modifyCandleStick() data = get(h.webTable, &#x27;Data&#x27;); dates = datetime(data(:,1), &#x27;InputFormat&#x27;, &#x27;yyyy-MM-dd&#x27;); customRed = [0.6350 0.0780 0.1840]; customGreen = [0.4660 0.6740 0.1880]; % Find all objects of type &#x27;patch&#x27; (the candlestick bodies) hold(h.ax,&#x27;on&#x27;); patches = findobj(h.ax, &#x27;Type&#x27;, &#x27;patch&#x27;); lines = findobj(gca, &#x27;Type&#x27;, &#x27;line&#x27;); lineXData = fliplr(get(lines, &#x27;XData&#x27;)); lineYData = fliplr(get(lines, &#x27;YData&#x27;)); delete(lines); % Loop through the patches to adjust their colors for i = 1:length(patches) patchXData = get(patches(i), &#x27;XData&#x27;); % Determine the corresponding date index based on XData% dateIndex = find(dates == patchXData(1)); yData = get(patches(i),&#x27;YData&#x27;); openPrices = yData(1); closePrices = yData(2); % Compare open and close prices for the current date if closePrices &gt; openPrices % If close is greater than open, set the body to customRed set(patches(i), &#x27;FaceColor&#x27;, &#x27;None&#x27; ,&#x27;EdgeColor&#x27;,customRed); plot(h.ax,[lineXData(3*i-1) lineXData(3*i)], [lineYData(3*i-1) lineYData(3*i)],... &#x27;Color&#x27;,customRed,&#x27;LineWidth&#x27;,1.1) else % If close is less than or equal to open, set the body to customGreen set(patches(i), &#x27;FaceColor&#x27;,&#x27;none&#x27;,&#x27;EdgeColor&#x27;, customGreen); plot(h.ax,[lineXData(3*i-1) lineXData(3*i)], [lineYData(3*i-1) lineYData(3*i)],... &#x27;Color&#x27;,customGreen,&#x27;LineWidth&#x27;,1.1) end end end% Callback function for returning to the main panel function returnToMainPanel(~, ~) % Delete the calculator interface or word lookup interface and show the main panel panelFields = &#123;&#x27;calculatorPanel&#x27;, &#x27;wordLookupPanel&#x27;, &#x27;StockMarketPanel&#x27;,&#x27;webPlottingPanel&#x27;,&#x27;ax&#x27;&#125;; % Loop over each field name and delete the field if it exists for k = 1:numel(panelFields) fieldName = panelFields&#123;k&#125;; if isfield(h, fieldName)% delete(h.(fieldName).Children) delete(h.(fieldName)); h = rmfield(h, fieldName); % Optionally remove the field from the structure end end set(h.panel, &#x27;Visible&#x27;, &#x27;on&#x27;); set(h.fig, &#x27;Color&#x27;, [0.95 0.95 0.95]); set(h.fig, &#x27;WindowKeyPressFcn&#x27;, @keyPressCallback); set(h.fig,&#x27;Position&#x27;,h.figOriginPosition); endend This is another GUI tool used for a file filter with some fancy stufffunction file_explorer() if exist(&#x27;myTempDataBase.txt&#x27;, &#x27;file&#x27;) database = readcell(&#x27;myTempDataBase.txt&#x27;,&#x27;Delimiter&#x27;,&#x27;Tab&#x27;,&#x27;LineEnding&#x27;,&quot;\\n&quot;); else database = []; % Initialize an empty database or however you wish end % Create the main figure window main_fig = figure(&#x27;Name&#x27;, &#x27;File Explorer&#x27;, &#x27;Position&#x27;, [100, 100, 800, 600]... , &#x27;Units&#x27;, &#x27;pixels&#x27;, &#x27;Resize&#x27;, &#x27;on&#x27;, &#x27;NumberTitle&#x27;, &#x27;off&#x27; ... , &#x27;MenuBar&#x27;, &#x27;none&#x27;,&#x27;CloseRequestFcn&#x27;,&#123;@saveDatabaseOnClose,database&#125;); % Create a panel for the controls controls_panel = uipanel(&#x27;Parent&#x27;, main_fig, &#x27;Title&#x27;, &#x27;Controls&#x27;, &#x27;Position&#x27;, [0.01, 0.88, 0.98, 0.11]); % Create the file retrieval button btn_retrieve = uicontrol(&#x27;Parent&#x27;, controls_panel, &#x27;Style&#x27;, &#x27;pushbutton&#x27;, &#x27;String&#x27;, &#x27;Retrieve Files&#x27;, ... &#x27;Units&#x27;, &#x27;normalized&#x27;, &#x27;Position&#x27;, [0.01, 0.1, 0.10, 0.5], &#x27;Callback&#x27;, @retrieve_files); % Create the sorting button btn_sort = uicontrol(&#x27;Parent&#x27;, controls_panel, &#x27;Style&#x27;, &#x27;pushbutton&#x27;, &#x27;String&#x27;, &#x27;Sort by Date&#x27;, ... &#x27;Units&#x27;, &#x27;normalized&#x27;, &#x27;Position&#x27;, [0.11, 0.1, 0.10, 0.5], &#x27;Callback&#x27;, @sort_files); % Create the open button btn_open = uicontrol(&#x27;Parent&#x27;, controls_panel, &#x27;Style&#x27;, &#x27;pushbutton&#x27;, &#x27;String&#x27;, &#x27;Open&#x27;, ... &#x27;Units&#x27;, &#x27;normalized&#x27;, &#x27;Position&#x27;, [0.21, 0.1, 0.06, 0.5], &#x27;Callback&#x27;, @open_file); panel_filter = uipanel(&#x27;Parent&#x27;, controls_panel, &#x27;Title&#x27;, &#x27;Filter&#x27;... ,&#x27;Units&#x27;,&#x27;normalized&#x27; ,&#x27;Position&#x27;, [0.27, 0.05, 0.36, .92]... ,&#x27;TitlePosition&#x27;,&#x27;centertop&#x27;); btn_filter = uicontrol(&#x27;Parent&#x27;, controls_panel, &#x27;Style&#x27;, &#x27;pushbutton&#x27;, &#x27;String&#x27;, &#x27;Filter File&#x27;, ... &#x27;Units&#x27;, &#x27;normalized&#x27;, &#x27;Position&#x27;, [0.28, 0.1, 0.08, 0.5], &#x27;Callback&#x27;, @loadFileFilter); btn_filterSearch = uicontrol(&#x27;Parent&#x27;, controls_panel, &#x27;Style&#x27;, &#x27;edit&#x27;, &#x27;String&#x27;, &#x27;&#x27;, ... &#x27;Units&#x27;, &#x27;normalized&#x27;, &#x27;Position&#x27;, [0.36, 0.1, 0.1, 0.5], &#x27;Callback&#x27;, @searchKeyWordsCallBack); btn_saveData = uicontrol(&#x27;Parent&#x27;, controls_panel, &#x27;Style&#x27;, &#x27;pushbutton&#x27;, &#x27;String&#x27;, &#x27;Save&#x27;, ... &#x27;Units&#x27;, &#x27;normalized&#x27;, &#x27;Position&#x27;, [0.46, 0.1, 0.08, 0.5], &#x27;Callback&#x27;, @SaveFilterData); btn_loadData = uicontrol(&#x27;Parent&#x27;, controls_panel, &#x27;Style&#x27;, &#x27;pushbutton&#x27;, &#x27;String&#x27;, &#x27;Load&#x27;, ... &#x27;Units&#x27;, &#x27;normalized&#x27;, &#x27;Position&#x27;, [0.54, 0.1, 0.08, 0.5], &#x27;Callback&#x27;, @loadFileFilterData); btn_searchBar = uipanel(&#x27;Parent&#x27;, controls_panel, &#x27;Title&#x27;,&#x27;Search&#x27;, &#x27;Units&#x27;, &#x27;normalized&#x27;, ... &#x27;Position&#x27;, [0.64, 0.05, 0.15, 0.92],&#x27;TitlePosition&#x27;,&#x27;centertop&#x27;); edit_search = uicontrol(&#x27;Parent&#x27;, controls_panel, &#x27;Style&#x27;, &#x27;edit&#x27;, &#x27;Units&#x27;, &#x27;normalized&#x27;, ... &#x27;Position&#x27;, [0.65, 0.10, 0.13, 0.5], &#x27;Callback&#x27;, @search_files,&#x27;ButtonDownFcn&#x27;,@clear_search); edit_clicked = false; table_dataFilter = uitable(&#x27;Parent&#x27;, main_fig, &#x27;Units&#x27;, &#x27;normalized&#x27;, &#x27;Position&#x27;, [0.01, 0.01, 0.98, 0.86], ... &#x27;ColumnName&#x27;, &#123;&#x27;Search Result&#x27;&#125;, ... &#x27;ColumnWidth&#x27;, &#123;830&#125;, &#x27;RowName&#x27;, []... ,&#x27;CellSelectionCallback&#x27;,@table_selection_callback... ,&#x27;ButtonDownFcn&#x27;,@tableClickHandle... ,&#x27;Visible&#x27;,&#x27;on&#x27;,&#x27;FontSize&#x27;,15); table_dataFilter.Visible = &#x27;off&#x27;; % Create the table to display the file information table_data = uitable(&#x27;Parent&#x27;, main_fig, &#x27;Units&#x27;, &#x27;normalized&#x27;, &#x27;Position&#x27;, [0.01, 0.01, 0.98, 0.86], ... &#x27;ColumnName&#x27;, &#123;&#x27;Name&#x27;, &#x27;Type&#x27;, &#x27;Size (MB)&#x27;, &#x27;Date&#x27;, &#x27;Path&#x27;&#125;, ... &#x27;ColumnWidth&#x27;, &#123;200, 80, 100, 150, 300&#125;, &#x27;RowName&#x27;, []... ,&#x27;CellSelectionCallback&#x27;,@table_selection_callback... ,&#x27;ButtonDownFcn&#x27;,@tableClickHandle); % Wait for uitable to be ready drawnow; % Access Java component of uitable jScroll = findjobj(table_data); jTable = jScroll.getViewport.getView; % Set up a MouseListener for double-click detection set(jTable, &#x27;MouseClickedCallback&#x27;, @(src, event)onTableClick(src, event)); jScroll2 = findjobj(table_dataFilter); jTable2 = jScroll2.getViewport.getView; % Set up a MouseListener for double-click detection set(jTable2, &#x27;MouseClickedCallback&#x27;, @(src, event)onTableClick(src, event)); % Define a MATLAB context menu cMenu = uicontextmenu; uimenu(cMenu, &#x27;Label&#x27;, &#x27;Copy&#x27;, &#x27;Callback&#x27;, @(src, event)copyFileOrFolderAction(jTable)); uimenu(cMenu, &#x27;Label&#x27;, &#x27;Open Folder Path&#x27;, &#x27;Callback&#x27;, @(src, event)openFolderPathAction());% uimenu(cMenu, &#x27;Label&#x27;, &#x27;Properties&#x27;, &#x27;Callback&#x27;, @(src, event)showPropertiesAction(jTable)); set(jTable, &#x27;MousePressedCallback&#x27;, @(src, event)onTableRightClick(src, event, cMenu,table_data)); % Set the maximum number of rows % table_data.Data = cell(1000, 5); % Initialize with 1000 rows % Initialize variables files = []; file_info = []; sort_order = 1; % 1 for descending, -1 for ascending path = []; pathIndex = []; line_number = []; % Create the text label for the edit component label_folder = uipanel(&#x27;Parent&#x27;, controls_panel, &#x27;Title&#x27;, &#x27;Folder Path&#x27;, &#x27;Units&#x27;, &#x27;normalized&#x27;, ... &#x27;Position&#x27;, [0.80, 0.05, 0.185, 0.92],&#x27;TitlePosition&#x27;,&#x27;centertop&#x27;); % Create the text input field edit_folder = uicontrol(&#x27;Parent&#x27;, controls_panel, &#x27;Style&#x27;, &#x27;edit&#x27;, &#x27;Units&#x27;, &#x27;normalized&#x27;, ... &#x27;Position&#x27;, [0.81, 0.1, 0.165, 0.5], &#x27;Callback&#x27;, @set_folder,&#x27;String&#x27;,path); initialiseDatabase(database) function retrieve_files(~, ~) % Specify the file path % Prompt the user to select a folder% if isempty(path) path = uigetdir(&#x27;/Applications/MATLAB_R2021a.app/toolbox/matlab/iofun/&#x27;); if path == 0 return; end% end % Initialize the file_info cell array file_info = &#123;&#125;; % Recursively retrieve files and update file_info file_info = retrieveFilesRecursively(path, file_info); table_data.Visible = &#x27;on&#x27;; table_dataFilter.Visible = &#x27;off&#x27;; % Update the table data set(table_data, &#x27;Data&#x27;, file_info); edit_folder.String = path; end function loadFileFilter(~,~) if isempty(file_info) return; end % Filter files by format filtered_data = file_info(contains(file_info(:,1), &#x27;.m&#x27;) | contains(file_info(:,1), &#x27;.txt&#x27;), :); % Update the table data set(table_data, &#x27;Data&#x27;, filtered_data); end function file_info = retrieveFilesRecursively(folderPath, file_info) % Get the list of files and folders items = dir(folderPath); items = items(~ismember(&#123;items.name&#125;, &#123;&#x27;.&#x27;, &#x27;..&#x27;&#125;)); % Filter out &#x27;.&#x27; and &#x27;..&#x27; entries for i = 1:length(items) currentItemPath = fullfile(folderPath, items(i).name); % Common details to store itemSizeMB = bytes2mb(items(i).bytes); % Convert bytes to MB for files, will be 0 for folders itemDate = datestr(items(i).datenum, &#x27;yyyy-mm-dd HH:MM:SS&#x27;); if items(i).isdir % Add directory info to file_info before recursing into it % Note: Size for directories can be complex to calculate and might not be meaningful; dirInfo = &#123;items(i).name, &#x27;Directory&#x27;, &#x27; &#x27;, itemDate, currentItemPath&#125;; file_info&#123;end+1, 1&#125; = dirInfo&#123;1&#125;; % Directory name file_info&#123;end, 2&#125; = dirInfo&#123;2&#125;; % Placeholder for size (0 for directories) file_info&#123;end, 3&#125; = dirInfo&#123;3&#125;; % Last modified date file_info&#123;end, 4&#125; = dirInfo&#123;4&#125;; % Full directory path file_info&#123;end, 5&#125; = dirInfo&#123;5&#125;; % Type (File/Directory) % Recurse into subdirectories file_info = retrieveFilesRecursively(currentItemPath, file_info); else % File processing fileInfo = &#123;items(i).name, &#x27;File&#x27;, itemSizeMB, itemDate, currentItemPath&#125;; file_info&#123;end+1, 1&#125; = fileInfo&#123;1&#125;; % Full file name with extension file_info&#123;end, 2&#125; = fileInfo&#123;2&#125;; % Store file size in MB file_info&#123;end, 3&#125; = fileInfo&#123;3&#125;; % Store last modified date file_info&#123;end, 4&#125; = fileInfo&#123;4&#125;; % Store the full file path file_info&#123;end, 5&#125; = fileInfo&#123;5&#125;; % Type (File/Directory) end end end function set_folder(~, ~) % Get the selected folder path from the edit component folder_path = get(edit_folder, &#x27;String&#x27;); % Check if the folder path exists if exist(folder_path, &#x27;dir&#x27;) % Retrieve files and update file_info file_info = retrieveFilesRecursively(folder_path, &#123;&#125;); % Update the table data set(table_data, &#x27;Data&#x27;, file_info); else errordlg(&#x27;Invalid folder path!&#x27;, &#x27;Error&#x27;); end end function sort_files(~, ~) % Get the current table data file_info = get(table_data, &#x27;Data&#x27;); % Check if the table data is not empty if isempty(file_info) || all(cellfun(@isempty, file_info(:,1))) return; end % Convert date strings to numbers for sorting date_values = datenum(file_info(:,4), &#x27;yyyy-mm-dd HH:MM:SS&#x27;); if sort_order % Sort in descending order [~, idx] = sort(date_values, &#x27;descend&#x27;); else % Sort in ascending order [~, idx] = sort(date_values, &#x27;ascend&#x27;); end % Apply sorted index to table data table_data.Data = file_info(idx,:); % Toggle the sort order for the next sort operation sort_order = ~sort_order; end function clear_search(src,~) edit_clicked = true; set(src,&#x27;String&#x27;,&#x27;&#x27;); end function search_files(~, ~) if edit_clicked edit_clicked = false; return; end % Get the search term search_term = get(edit_search, &#x27;String&#x27;); search_term = lower(search_term); % Convert search term to lowercase for case-insensitive comparison % Always display all files if search term is empty if isempty(search_term) set_folder() else % Refresh the table with files that match the search term (case-insensitive) matching_files = cellfun(@(name) contains(lower(name), search_term), file_info(:,1)); filtered_data = file_info(matching_files, :); table_data.Data = filtered_data; end table_data.Visible = &#x27;on&#x27;; table_dataFilter.Visible = &#x27;off&#x27;; end function searchKeyWordsCallBack(~, ~) if edit_clicked edit_clicked = false; return; end % Get the search term search_term = get(btn_filterSearch, &#x27;String&#x27;); fileList = dir(fullfile(path, &#x27;**/*.m&#x27;)); fileList = [fileList; dir(fullfile(path, &#x27;**/*.txt&#x27;))]; allMatches = &#123;&#125;; % Initialize an empty cell array to store all matches allMatchesPure = &#123;&#125;; % Initialize an empty cell array to store all matches mm = 1; for i = 1:length(fileList) filePath = fullfile(fileList(i).folder, fileList(i).name); fileContent = fileread(filePath); expr = [&#x27;[^\\n]*&#x27; search_term &#x27;[^\\n]*&#x27;]; [matches, starts] = regexp(fileContent,expr, &#x27;match&#x27;,&#x27;start&#x27; ,&#x27;ignorecase&#x27;); matchesHighlighted = cellfun(@(x) [ &#x27;&lt;html&gt;&#x27; strrep(x, search_term, [&#x27;&lt;span style=&quot;color: blue;&quot;&gt;&lt;b&gt;&#x27;, search_term, &#x27;&lt;/b&gt;&lt;/span&gt;&#x27;]) &#x27;&lt;/html&gt;&#x27;], matches, &#x27;UniformOutput&#x27;, false); % matchesHighlighted = cellfun(@(x) [&#x27;&lt;html&gt;&lt;span style=&quot;color: blue;&quot;&gt;&#x27;, strrep(x, search_term, [&#x27;&lt;b&gt;&#x27;, search_term, &#x27;&lt;/b&gt;&#x27;]), &#x27;&lt;/span&gt;&lt;/html&gt;&#x27;], matches, &#x27;UniformOutput&#x27;, false); allMatches = [allMatches; matchesHighlighted&#x27;]; % Append to allMatches allMatchesPure = [allMatchesPure; matches&#x27;]; % Create a logical array where newlines are 1, others are 0 newlines = (fileContent == char(10)); lineNumbersAtIndices = cumsum([1, newlines]); % Start from 1 to count lines correctly lineNumbersForMatches = lineNumbersAtIndices(starts); if ~isempty(matchesHighlighted) for j = 1:length(matchesHighlighted) pathIndex&#123;mm + j -1&#125; = filePath; line_number(mm+j-1) = lineNumbersForMatches(j); end mm = mm + 1; end end table_data.Visible = &#x27;off&#x27;; table_dataFilter.Visible = &#x27;on&#x27;; table_dataFilter.Data = allMatches; jtableFilter = findjobj(table_dataFilter); height = jtableFilter.getViewport.getView.getRowHeight; if height &lt; 30 jtableFilter.getViewport.getView.setRowHeight(2*height) end setappdata(btn_saveData,&#x27;allMatchesPure&#x27;,allMatchesPure); end function SaveFilterData(~,~) [fileName1, folder_path] = uiputfile(&#123;&#x27;example*.txt&#x27;,&#x27;Text Files (*.txt)&#x27;;... &#x27;example*.mat&#x27;,&#x27;Mat Files (*.mat)&#x27;;... &#x27;example*.*&#x27;,&#x27;All Files (*.*)&#x27;&#125;,... &#x27;Save as&#x27;); if isequal(fileName1,0) || isequal(folder_path,0) % User pressed cancel or closed the dialog disp(&#x27;User cancelled the save operation.&#x27;); return; else fullFilePath = fullfile(folder_path, fileName1); % allMatchesPure = regexprep(getappdata(btn_saveData, &#x27;allMatchesPure&#x27;),&#x27;\\&quot;&#x27;,&#x27; &#x27;); allMatchesPure = getappdata(btn_saveData, &#x27;allMatchesPure&#x27;); writecell(allMatchesPure,fullFilePath,&#x27;Delimiter&#x27;,&#x27;tab&#x27;,&#x27;QuoteStrings&#x27;,false); end end function loadFileFilterData(~,~) [fileName1,folder_path,indx] = uigetfile( ... &#123;&#x27;*.txt;*.csv&#x27;,&#x27;Text File (*.txt,*csv)&#x27;; ... ... &#x27;*.m;*.mlx;*.fig;*.mat;*.slx;*.mdl&#x27;,... ... &#x27;MATLAB Files (*.m,*.mlx,*.fig,*.mat,*.slx,*.mdl)&#x27;; ... &#x27;*.m;*.mlx&#x27;,&#x27;Code files (*.m,*.mlx)&#x27;; ... ... &#x27;*.fig&#x27;,&#x27;Figures (*.fig)&#x27;; ... &#x27;*.mat&#x27;,&#x27;MAT-files (*.mat)&#x27;; ... ...&#x27;*.mdl;*.slx&#x27;,&#x27;Models (*.slx, *.mdl)&#x27;; ... &#x27;*.*&#x27;, &#x27;All Files (*.*)&#x27;&#125;, ... &#x27;Select a File&#x27;); if isequal(fileName1,0) || isequal(folder_path,0) % User pressed cancel or closed the dialog disp(&#x27;User cancelled the loading operation.&#x27;); return; else fullFilePath = fullfile(folder_path, fileName1); allMatchesPure = readcell(fullFilePath,&#x27;Delimiter&#x27;,&#x27;tab&#x27;,&#x27;LineEnding&#x27;,&quot;\\n&quot;); table_data.Visible = &#x27;off&#x27;; table_dataFilter.Visible = &#x27;on&#x27;; table_dataFilter.Data = allMatchesPure; jtableFilter = findjobj(table_dataFilter); height = jtableFilter.getViewport.getView.getRowHeight; if height &lt; 30 jtableFilter.getViewport.getView.setRowHeight(2*height) end setappdata(btn_saveData,&#x27;allMatchesPure&#x27;,allMatchesPure); end end function initialiseDatabase(database) if ~isempty(database) allMatchesPure = database; table_data.Visible = &#x27;off&#x27;; table_dataFilter.Visible = &#x27;on&#x27;; table_dataFilter.Data = allMatchesPure; jtableFilter = findjobj(table_dataFilter); height = jtableFilter.getViewport.getView.getRowHeight; if height &lt; 30 jtableFilter.getViewport.getView.setRowHeight(2*height) end setappdata(btn_saveData,&#x27;allMatchesPure&#x27;,allMatchesPure); else return; end end function saveDatabaseOnClose(src, ~, database) if ~isempty(table_dataFilter.Data) allMatchesPure = getappdata(btn_saveData, &#x27;allMatchesPure&#x27;); fullFilePath = pwd; writecell(allMatchesPure,[fullFilePath &#x27;/myTempDatabase.txt&#x27;],&#x27;Delimiter&#x27;,&#x27;tab&#x27;,&#x27;QuoteStrings&#x27;,false); delete(src); end end function table_selection_callback(src, event) if ~isempty(event.Indices) src.UserData = event.Indices(1); % Store the row index in UserData else src.UserData = []; % Clear selection if no cell is selected end pause(0.4); % to allow the user time to add a second click if strcmpi(main_fig.SelectionType, &#x27;open&#x27;)% fprintf(1, &#x27;Double click on cell&#x27;); open_file(); end end function onTableClick(~, event) % Check if the event is a double-click if event.getClickCount() == 2 open_file(); end end function onTableRightClick(src, event, cMenu, table_data) % Check if the event is a right-click (button 3 is the right mouse button) if event.getButton() == 3 % Get the current pointer location (in pixels) fig = table_data.Parent; currentPoint = fig.CurrentPoint; % Show the context menu at the current pointer location set(cMenu, &#x27;Position&#x27;, currentPoint, &#x27;Visible&#x27;, &#x27;on&#x27;); end end function copyFileOrFolderAction(jTable) % Get selected cell value row = jTable.getSelectedRow() + 1; % Java indices are 0-based col = jTable.getSelectedColumn() + 1; if row &gt; 0 &amp;&amp; col &gt; 0 dataModel = jTable.getModel(); path1 = char(dataModel.getValueAt(row - 1, col - 1)); % Assuming the cell contains a file/folder path if exist(path1, &#x27;file&#x27;) || exist(path1, &#x27;dir&#x27;) % Check if it&#x27;s a valid file/folder path % Ask the user to select a destination folder destinationFolder = uigetdir(&#x27;Select a destination folder&#x27;); if destinationFolder ~= 0 % Ensure the user didn&#x27;t cancel the dialog [~, name, ext] = fileparts(path1); destinationPath = fullfile(destinationFolder, &#x27;/&#x27;); % Construct the destination path try % Attempt to copy the file or folder copyfile([path path1], destinationPath);% msgbox(&#x27;Copy successful!&#x27;, &#x27;Success&#x27;); catch errordlg(&#x27;Failed to copy the selected file/folder.&#x27;, &#x27;Error&#x27;); end end else errordlg(&#x27;The selected cell does not contain a valid file/folder path.&#x27;, &#x27;Error&#x27;); end end end function openFolderPathAction() % Open user&#x27;s home directory for demonstration. Replace this path with % the one you&#x27;d like to open based on your application&#x27;s logic. if ispc folderPath = getenv(&#x27;USERPROFILE&#x27;); % Works on Windows; else folderPath = getenv(&#x27;HOME&#x27;);% on Linux/Mac end if isfolder(folderPath) % Open the folder web([&#x27;file:///&#x27;, path], &#x27;-browser&#x27;); end end% function showPropertiesAction(jTable)% % Get selected cell info% row = jTable.getSelectedRow() + 1;% col = jTable.getSelectedColumn() + 1;% if row &gt; 0 &amp;&amp; col &gt; 0% dataModel = jTable.getModel();% value = dataModel.getValueAt(row - 1, col - 1); % Java is 0-based% % Display properties% msgbox(sprintf(&#x27;Row: %d\\nColumn: %d\\nValue: %s&#x27;, row, col, num2str(value)), &#x27;Cell Properties&#x27;);% end% end function open_file(~, ~) selected_index = get(table_data, &#x27;UserData&#x27;); selected_index2 = get(table_dataFilter, &#x27;UserData&#x27;); if ~isempty(selected_index) % Get the file path of the selected row file_path = table_data.Data&#123;selected_index, 5&#125;; if ispc winopen(file_path); else system([&#x27;open &#x27;, file_path]); % For macOS and Linux end elseif ~isempty(selected_index2) file_path = pathIndex&#123;selected_index2&#125;; [~, ~, ext] = fileparts(file_path); lineNumber = line_number(selected_index2); if strcmp(ext, &#x27;.m&#x27;) edit(file_path); pause(0.1); % Wait for the file to open matlab.desktop.editor.getActive().goToLine(lineNumber); elseif strcmp(ext, &#x27;.txt&#x27;) open(file_path); pause(0.1); % Wait for the file to open com.mathworks.mde.editor.EditorUtils.scrollToLine(lineNumber); end end return; % No file selected endendfunction mb = bytes2mb(bytes) % Convert bytes to megabytes mb = bytes / (1024 ^ 2);end","categories":[],"tags":[{"name":"Matlab graphics","slug":"Matlab-graphics","permalink":"http://yoursite.com/tags/Matlab-graphics/"}]},{"title":"Latex Tips","slug":"Tips","date":"2023-08-08T03:27:08.000Z","updated":"2023-06-07T14:00:00.000Z","comments":true,"path":"2023/08/08/Tips/","link":"","permalink":"http://yoursite.com/2023/08/08/Tips/","excerpt":"Using braces to label parts of an equation1\\[\\Theta^+ = \\underbrace&#123;\\int_0^&#123;z_&#123;crit&#125;^+&#125;\\frac&#123;dz^+&#125;&#123;1/Pr +\\alpha_t/\\nu&#125;&#125;_&#123;\\Romannum&#123;1&#125;&#125; + \\underbrace&#123;\\int_&#123;z_&#123;crit&#125;^+&#125;^&#123;z^+&#125;\\frac&#123;dz^+&#125;&#123;1/Pr +\\alpha_t/\\nu&#125;&#125;_&#123;\\Romannum&#123;2&#125;&#125;\\]","text":"Using braces to label parts of an equation1\\[\\Theta^+ = \\underbrace&#123;\\int_0^&#123;z_&#123;crit&#125;^+&#125;\\frac&#123;dz^+&#125;&#123;1/Pr +\\alpha_t/\\nu&#125;&#125;_&#123;\\Romannum&#123;1&#125;&#125; + \\underbrace&#123;\\int_&#123;z_&#123;crit&#125;^+&#125;^&#123;z^+&#125;\\frac&#123;dz^+&#125;&#123;1/Pr +\\alpha_t/\\nu&#125;&#125;_&#123;\\Romannum&#123;2&#125;&#125;\\] Get Roman numerals in text install the package of “romannum” type \\usepackage&#123;romannum&#125;in the text \\romannum&#123;1&#125; for Lowercase roman numbers or \\Romannum&#123;1&#125; for Uppercase roman numbers Setting ‘Fill Anywhere’ command in Latexing package in SublimeThe fill anywhere command is providing the filling that a drop down menu will let you choose what you would like to do at the current selection. For example it could be required to fill a image path somewhere else then just the normal \\includegraphics command. The fill anywhere command is available for \\include, \\input, \\subfile. \\includegraphics, \\ref, \\cite, and \\ac commands and there mutations like usual. It is suggested to set the key binding as follows to make it handy. 12345678&#123; &quot;keys&quot;: [&quot;ctrl+shift+alt+z&quot;], &quot;command&quot;: &quot;ltx_fill_anywhere&quot;, &quot;context&quot;: [ &#123;&quot;key&quot;: &quot;selection_empty&quot;, &quot;match_all&quot;: true, &quot;operand&quot;: true, &quot;operator&quot;: &quot;equal&quot;&#125;, &#123;&quot;key&quot;: &quot;selector&quot;, &quot;operand&quot;: &quot;text.tex.latex&quot;, &quot;operator&quot;: &quot;equal&quot;&#125; ] &#125; Two statements using curly brace in an equation12345678910\\documentclass&#123;article&#125;\\usepackage&#123;amsmath&#125;\\begin&#123;document&#125;\\begin&#123;equation&#125; f(x)=\\begin&#123;cases&#125; 1, &amp; \\text&#123;if $x&lt;0$&#125;.\\\\ 0, &amp; \\text&#123;otherwise&#125;. \\end&#123;cases&#125;\\end&#123;equation&#125;\\end&#123;document&#125; 123456789101112\\documentclass&#123;article&#125;\\begin&#123;document&#125;This is your only binary choices\\begin&#123;math&#125; \\left\\&#123; \\begin&#123;array&#125;&#123;l&#125; 0\\\\ 1 \\end&#123;array&#125; \\right.\\end&#123;math&#125;\\end&#123;document&#125; Get information of LaTex template through command123456789\\documentclass&#123;article&#125;\\makeatletter\\newcommand\\thefont&#123;\\expandafter\\string\\the\\font&#125;\\makeatother\\begin&#123;document&#125;\\thefont % check all attributes of font\\the\\columnwidth % check column width\\the\\textwidth % check text width\\end&#123;document&#125; Create a shortcut to the snippet palette in Sublime Text 3add following snippet code in Preferences:Key Bindings - User 12345678910[ &#123; &quot;keys&quot;: [&quot;ctrl+y&quot;], &quot;command&quot;: &quot;show_overlay&quot;, &quot;args&quot;: &#123; &quot;overlay&quot;: &quot;command_palette&quot;, &quot;text&quot;: &quot;Snippet: &quot; &#125; &#125;] Sublime Text 3 LaTexTools configuration under WindowsThe path must include &#96;ghostscript’ to execute epstopdf. Here the path is C:\\texlive\\2020\\tlpkg\\tlgs\\bin. 12345678910111213141516171819&quot;windows&quot;: &#123; // Path used when invoking tex &amp; friends; &quot;&quot; is fine for MiKTeX // For TeXlive 2011 (or other years) use &quot;texpath&quot; : &quot;C:\\\\texlive\\\\2020\\\\bin\\\\win32;C:\\\\texlive\\\\2020\\\\tlpkg\\\\tlgs\\\\bin;$PATH&quot;, // C:\\\\texlive\\\\2020\\\\tlpkg\\\\tlgs\\\\bin offer ghostgraphics path // &quot;texpath&quot; : &quot;C:\\\\Program Files\\\\MiKTeX 2.9\\\\miktex\\\\bin\\\\x64;PATH&quot;, // TeX distro: &quot;miktex&quot; or &quot;texlive&quot; //&quot;distro&quot; : &quot;miktex&quot;, &quot;distro&quot; : &quot;texlive&quot;, // Command to invoke Sumatra. If blank, &quot;SumatraPDF.exe&quot; is used (it has to be on your PATH) &quot;sumatra&quot;: &quot;C:\\\\Program Files\\\\SumatraPDF\\\\SumatraPDF.exe&quot;, // Command to invoke Sublime Text. Used if the keep_focus toggle is true. // If blank, &quot;subl.exe&quot; or &quot;sublime_text.exe&quot; will be used. &quot;sublime_executable&quot;: &quot;&quot;, // how long (in seconds) to wait after the jump_to_pdf command completes // before switching focus back to Sublime Text. This may need to be // adjusted depending on your machine and configuration. &quot;keep_focus_delay&quot;: 0.5 &#125;, Striketrhough in LaTex\\usepackage[normalem]{ulem} in the preamble \\sout{text to be striked out} for a horizontal line through text to be striked out \\xout{text to be crossed out} for many short diagonal lines crossing out the letters of the text to be crossed out customise your own symbol in latex with TIKZ12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273\\usepackage&#123;tikz&#125;\\usetikzlibrary&#123;shapes.geometric&#125;\\newcommand&#123;\\strikeddowntriangleFilled&#125;[1]&#123;\\begin&#123;tikzpicture&#125;\\node[inner sep=0pt] (triangle) at (0,0) &#123; \\begin&#123;tikzpicture&#125; \\fill[line width = #1] (0,0) -- ++(0.55em,0) -- ++(-0.275em,0.55em) -- cycle; \\end&#123;tikzpicture&#125;&#125;;\\draw[line width=#1] (triangle.west) -- (triangle.east);\\end&#123;tikzpicture&#125;&#125; % this generates a filled symbol with strikethrough line \\newcommand&#123;\\dcircle&#125;[1]&#123;\\begin&#123;tikzpicture&#125;[line width=#1]\\node[inner sep=0pt,circle,minimum size=0.55em,draw] (circle) &#123;&#125;;\\end&#123;tikzpicture&#125; % draw a circle with comparable size of font. &#125;\\DeclareRobustCommand&#123;\\crossdefined&#125;[1]&#123;\\begin&#123;tikzpicture&#125;\\node[inner sep=0pt] (cross) at (0,0) &#123; \\begin&#123;tikzpicture&#125; \\draw[line width=#1] (0,0) -- (0.3525em,-0.3525em); \\draw[line width=#1] (0,-0.3525em) -- (0.3525em,0); \\end&#123;tikzpicture&#125;&#125;;\\end&#123;tikzpicture&#125;&#125;\\DeclareRobustCommand&#123;\\plusdefined&#125;[1]&#123;\\begin&#123;tikzpicture&#125;\\node[inner sep=0pt] (plus) at (0,0) &#123; \\begin&#123;tikzpicture&#125; \\draw[line width=#1] (0,0) -- (0.50em,0); \\draw[line width=#1] (0.275em,0.275em) -- (0.275em,-0.275em); \\end&#123;tikzpicture&#125;&#125;;\\end&#123;tikzpicture&#125;&#125;\\DeclareRobustCommand&#123;\\filldowntriangle&#125;[1]&#123;\\begin&#123;tikzpicture&#125;\\node[inner sep=0pt] (triangle) at (0,0) &#123; \\begin&#123;tikzpicture&#125; \\draw[fill=#1] (0,0) -- ++(0.55em,0) -- ++(-0.275em,-0.55em) -- cycle; \\end&#123;tikzpicture&#125;&#125;;\\end&#123;tikzpicture&#125;&#125;\\DeclareRobustCommand&#123;\\filluptriangle&#125;[1]&#123;\\begin&#123;tikzpicture&#125;\\node[inner sep=0pt] (triangle) at (0,0) &#123; \\begin&#123;tikzpicture&#125; \\draw[fill=#1] (0,0) -- ++(0.55em,0) -- ++(-0.275em,0.55em) -- cycle; \\end&#123;tikzpicture&#125;&#125;;\\end&#123;tikzpicture&#125;&#125;\\DeclareRobustCommand&#123;\\uptriangle&#125;[2]&#123;\\begin&#123;tikzpicture&#125;\\node[inner sep=0pt] (triangle) at (0,0) &#123; \\begin&#123;tikzpicture&#125; \\fill[line width = #1,color = #2,fill = none,draw = #2] (0,0) -- ++(0.55em,0) -- ++(-0.275em,0.55em) -- cycle; \\end&#123;tikzpicture&#125;&#125;;\\end&#123;tikzpicture&#125;&#125; add logo in the beamer123456789\\setbeamertemplate&#123;frametitle&#125;&#123;\\vspace&#123;6pt&#125;\\hspace&#123;-5pt&#125;\\textbf&#123;\\insertframetitle&#125; \\hspace*&#123;\\fill&#125; \\begin&#123;tikzpicture&#125;[remember picture, overlay]\\node [inner sep=0pt, %xshift=-..., yshift=-... % if you like to shift the image out of corner below left] at (current page.north east) &#123;\\includegraphics[height=0.12\\paperheight]&#123;unimelb-logo.png&#125;&#125;; \\end&#123;tikzpicture&#125;\\hspace&#123;0pt&#125;&#125; using &#96;biblatex’ to insert reference1234567891011121314151617 \\usepackage[american]&#123;babel&#125; \\usepackage[utf8]&#123;inputenc&#125; \\usepackage&#123;csquotes&#125; \\usepackage[backend=biber,style=apa,natbib=true,sorting = ynt,sortcites = true, maxcitenames = 2, date = year, uniquename=false, uniquelist=false]&#123;biblatex&#125; \\DeclareLanguageMapping&#123;american&#125;&#123;american-apa&#125; \\DeclareFieldFormat&#123;doi&#125;&#123;&#125; \\DeclareFieldFormat&#123;url&#125;&#123;&#125; \\DeclareFieldFormat&#123;issn&#125;&#123;&#125; \\DeclareFieldFormat&#123;urldate&#125;&#123;&#125; \\DeclareFieldFormat&#123;version&#125;&#123;&#125; \\renewbibmacro*&#123;doi+url+urldate+issn+version&#125;&#123;&#125; \\addbibresource&#123;referenceBitex.bib&#125; % Make the journaltitle field a hyperlink\\DeclareFieldFormat[article]&#123;journaltitle&#125;&#123;\\href&#123;\\thefield&#123;url&#125;&#125;&#123;\\textnormal&#123;#1&#125;&#125;&#125;% Remove quotation marks around titles of papers\\DeclareFieldFormat[article]&#123;title&#125;&#123;#1&#125; using package cleveref123456\\usepackage[capitalize]&#123;cleveref&#125; \\crefname&#123;chapter&#125;&#123;Chapter&#125;&#123;Chapters&#125;\\crefname&#123;section&#125;&#123;Section&#125;&#123;Sections&#125;\\AtBeginEnvironment&#123;appendices&#125;&#123;\\crefalias&#123;chapter&#125;&#123;appendix&#125;&#125;\\crefname&#123;figure&#125;&#123;Figure&#125;&#123;Figures&#125; add footnotemark in table environment1234567891011121314151617181920\\begin&#123;table&#125;[!t] \\centering \\begin&#123;threeparttable&#125; % Start threeparttable environment \\caption&#123;% Dual-wire sensors&#x27; dimension. &#125; \\label&#123;tab:dual_wireDimension&#125; \\begin&#123;tabular&#125;&#123;cccccccc&#125; \\hline $\\alpha_&#123;&#123;p&#125;&#125;$ &amp; $d_\\mathrm&#123;hw&#125;$\\tnote&#123;*&#125; &amp; $d_\\mathrm&#123;cw&#125;$\\tnote&#123;*&#125; &amp; $l_\\mathrm&#123;hw&#125;$ &amp; $l_\\mathrm&#123;cw&#125;$ &amp; $L_\\mathrm&#123;hw&#125;$ &amp; $L_\\mathrm&#123;cw&#125;$ &amp; $\\Delta x$ \\\\ (deg) &amp; ($\\mathrm&#123;\\upmu m&#125;$) &amp; ($\\mathrm&#123;\\upmu m&#125;$) &amp; ($\\mathrm&#123;mm&#125;$) &amp; ($\\mathrm&#123;mm&#125;$) &amp; ($\\mathrm&#123;mm&#125;$) &amp; ($\\mathrm&#123;mm&#125;$) &amp; ($\\mathrm&#123;mm&#125;$) \\\\ $10$ &amp; 5.0 &amp; 1.5 &amp; 1.36 &amp; 1.37 &amp; 2.0 &amp; 3.3 &amp; 1.6 \\\\ $25$ &amp; 5.0 &amp; 1.5 &amp; 1.32 &amp; 1.36 &amp; 1.9 &amp; 3.0 &amp; 1.9 \\\\ \\hline \\end&#123;tabular&#125; \\begin&#123;tablenotes&#125;[flushleft] % Start tablenotes environment with flushleft option \\item[\\textsuperscript&#123;*&#125;] The subscript $_\\mathrm&#123;hw&#125;$ and $_\\mathrm&#123;cw&#125;$ denotes the quantity of hot-wire and cold-wire, respectively. \\end&#123;tablenotes&#125; % End tablenotes environment \\end&#123;threeparttable&#125; % End threeparttable environment \\end&#123;table&#125;","categories":[],"tags":[]},{"title":"PowerPoint","slug":"Powerpoint","date":"2020-05-31T22:49:36.000Z","updated":"2020-06-01T01:45:54.000Z","comments":true,"path":"2020/06/01/Powerpoint/","link":"","permalink":"http://yoursite.com/2020/06/01/Powerpoint/","excerpt":"Before presentation, slides have to be prepared to deliver your ideas more precisely. One of things in the process of making slides is to add pictures in your case. It is annoying to do this work from your storage if have a large number of pictures added. Here, we introduce a good way to establish connection between PowerPoint and Matlab to help us import images quickly.","text":"Before presentation, slides have to be prepared to deliver your ideas more precisely. One of things in the process of making slides is to add pictures in your case. It is annoying to do this work from your storage if have a large number of pictures added. Here, we introduce a good way to establish connection between PowerPoint and Matlab to help us import images quickly. exportToPPTX allows user to create PowrPoint files without using COM-objects automation. The example of code is shown below. 12345678%% Open a slide named &#x27;example.PPTX&#x27; exportToPPTX(&#x27;open&#x27;,&#x27;example&#x27;);%% Add images in a new slideslideId = exportToPPTX(&#x27;addslide&#x27;);% Upper left corner picture with a blue frame inserted via figure handleload earth; figure(&#x27;Renderer&#x27;,&#x27;zbuffer&#x27;); image(X); colormap(map); axis off;exportToPPTX(&#x27;addpicture&#x27;,gcf,&#x27;Position&#x27;,[1 1 3 2],&#x27;EdgeColor&#x27;,[0 0 0.8],&#x27;LineWidth&#x27;,3); %","categories":[],"tags":[]},{"title":"Git notes","slug":"Git-notes","date":"2020-02-14T06:04:27.000Z","updated":"2024-09-07T23:15:26.533Z","comments":true,"path":"2020/02/14/Git-notes/","link":"","permalink":"http://yoursite.com/2020/02/14/Git-notes/","excerpt":"Fatal: refusing to merge unrelated histories using “git merge” that allows merging two branches(e.g. remote branches and local branches) that have no common base by default.","text":"Fatal: refusing to merge unrelated histories using “git merge” that allows merging two branches(e.g. remote branches and local branches) that have no common base by default. git merge –allow-unrelated-histories to force the merge to happen Undo changes &#x2F; used for operate wrongly “git reset” has three primary forms of invocation. –soft, –mixed, –hard. git reset is similar in behavior to git checkout, where git checkout solely operates on the HEAD of ref pointer, however, git reset will move the HEAD ref pointer and the current branch ref pointer. example of a sequence of commits git checkout b git reset b Main options–hardthe most direct, DANGEROUS, and frequently used option –mixedthe stagin index is reset to the state of the specified commit –softhead in the commit History can change","categories":[],"tags":[]},{"title":"Research Assistant - Zotero","slug":"Zotero","date":"2020-02-14T00:13:19.000Z","updated":"2024-09-07T23:15:26.536Z","comments":true,"path":"2020/02/14/Zotero/","link":"","permalink":"http://yoursite.com/2020/02/14/Zotero/","excerpt":"科研的旅途中，需要阅读大量的论文，海量的论文无疑使得管理文献的工作变得非常复杂，尤其是因为命名方法的不恰当，导致后期再次阅读时查找困难。我看到部分学者喜欢使用author,year,title的组合方式命名文献如下图，然后存储至一固定文件夹中，以此管理文献。","text":"科研的旅途中，需要阅读大量的论文，海量的论文无疑使得管理文献的工作变得非常复杂，尤其是因为命名方法的不恰当，导致后期再次阅读时查找困难。我看到部分学者喜欢使用author,year,title的组合方式命名文献如下图，然后存储至一固定文件夹中，以此管理文献。 这样的方式固然方便，但同时文件名中所含的信息太少，当论文过多时，在搜索时极易引起混乱，因此不利于管理。 如今，各类文献管理软件的兴起，如Mendeley，Endnote，Zotero 以及国产软件NoteExpress等，使得论文管理有了一个比较好的提升。笔者目前使用较多是Zotero，这里着重介绍这一软件的入门使用，其中包括笔者文章引用过程中的一些小技巧以及如何结合Latex快速生成论文的参考文献。 Zotero的安装Zotero 安装完成后，推荐注册，方便在云端同步文献库。通过Edit&gt;&gt;Preferences&gt;&gt;Sync 确认是否登录。考虑到软件仅免费提供约100MB的空间，所以建议取消Sync full-text context选项， 这样不会同步全文，节省空间。完成这一步后，如果使用firefox 浏览器，可以安装相应的插件便于以后的文献插入。 Zotero的文献导入Zotero的文献导入途径很多，经过笔者多年的测试，推荐使用以下方法。简单来说是google scholar + firefox结合。 通过google scholar等途径可获取文献网址数据库(如springer, Elsevier等)后，可进入下载页面，如下图所示。 点击 download 可进入下载页面，此时会发现zotero在firefox上的对应插件已经点亮，点击后，即发现参考文献已经导入Zotero软件中。 如果没有下载权限，也可点击Export，选择对应的文献管理软件即可。这里需要说明的是 Endnote 和 Mendeley 使用人数较多，所以很多数据库通常会默认选择这两个软件所支持的参考文献格式如Ref, Ris 等。但Zotero几乎支持上述所有的格式，所以任意选择一个即可。浏览器插件会自动检测是否需要导入参考文献。 Zotero导出BibTexMicrosoft Word, Libre Office 可以通过插件使用 Zotero，具体方法请参照官网，这里不在做详细说明。鉴于排版的需求，建议使用Latex编辑论文。这里介绍两种方法导出BibTex文件。 直接导入 选择需要导入的文献， Ctrl+左键，可选择多个文献. 右击已选择的项目并选择 ‘Export Items’. 改变输出格式为 ‘BibLaTex’ 或者 ‘BibTex’. 保持默认选项或者使得 ‘Export Notes’被选择. 点击Ok，即可生成 ‘.bib’ 文件. 使用Better BibTex插件导入Better BibTex 使得 ‘.bib’文件保持与Zotero数据库的同步更新，并且便于使用定制的Citation Key 。使用方法，可参考https://guides.library.iit.edu/c.php?g=720120&amp;p=6296986 改变Better BibTex Export有时为了保持文献格式的一致性，我们需要省略参考文献中的一些内容比如urldate, issue 等等具体可以在Better BibTex setting 里面 修改 Export -&gt; Fields -&gt; Fields to omit from export (comma-separated) abstract,file,urldate,editor,issue,extra,doi,issn,number","categories":[{"name":"research","slug":"research","permalink":"http://yoursite.com/categories/research/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-02-04T07:19:25.000Z","updated":"2024-09-07T23:15:26.536Z","comments":true,"path":"2020/02/04/hello-world/","link":"","permalink":"http://yoursite.com/2020/02/04/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Inkscape Tricks","slug":"Inkscape_Tricks","date":"2020-01-19T22:39:36.000Z","updated":"2024-09-07T23:15:26.534Z","comments":true,"path":"2020/01/20/Inkscape_Tricks/","link":"","permalink":"http://yoursite.com/2020/01/20/Inkscape_Tricks/","excerpt":"Some tricks are listed in the following to help get speed up with this software.","text":"Some tricks are listed in the following to help get speed up with this software. Clipping由于inkscape没有直接的剪切功能，这里提供一种简单的方式仅供参考。 选择你想剪切的图片(object 1)，并使用group功能，在菜单中选择 Object &gt; Group 。 在刚选择的group上，画一个想要剪切的图形(如矩形，圆等)，object 2。 选择object 1 and object 2，点击 Object &gt; Clip &gt; set","categories":[],"tags":[]},{"title":"仅用于测试","slug":"仅用于测试","date":"2020-01-19T02:00:11.000Z","updated":"2024-09-07T23:15:26.539Z","comments":true,"path":"2020/01/19/仅用于测试/","link":"","permalink":"http://yoursite.com/2020/01/19/%E4%BB%85%E7%94%A8%E4%BA%8E%E6%B5%8B%E8%AF%95/","excerpt":"","text":"大家好，这是我的第一篇blog.","categories":[],"tags":[]}],"categories":[{"name":"research","slug":"research","permalink":"http://yoursite.com/categories/research/"},{"name":"Research","slug":"Research","permalink":"http://yoursite.com/categories/Research/"}],"tags":[{"name":"Arduino Code","slug":"Arduino-Code","permalink":"http://yoursite.com/tags/Arduino-Code/"},{"name":"MatLab Code","slug":"MatLab-Code","permalink":"http://yoursite.com/tags/MatLab-Code/"},{"name":"Arduino Code, MatLab Code","slug":"Arduino-Code-MatLab-Code","permalink":"http://yoursite.com/tags/Arduino-Code-MatLab-Code/"},{"name":"Device guideline","slug":"Device-guideline","permalink":"http://yoursite.com/tags/Device-guideline/"},{"name":"Matlab graphics","slug":"Matlab-graphics","permalink":"http://yoursite.com/tags/Matlab-graphics/"}]}